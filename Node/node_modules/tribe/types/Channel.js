var _ = require('underscore');

module.exports = function Channel(id) {
    var io = require('tribe/server/socket').io;

    // for the moment, this is a simple wrapper around socket.io rooms
    // we may want to add client IDs, so we'll need to add cleanup on disconnect

    this.id = id;

    this.join = function (socket) {
        socket.join(id);
    };

    this.leave = function (socket) {
        sockets.leave(id);
    };

    this.broadcast = function (envelope, origin) {
        if (origin)
            origin.broadcast.to(id).emit('message', prepareEnvelope(envelope));
        else
            io.sockets.in(id).emit('message', prepareEnvelope(envelope));
    };

    this.clients = function () {
        return io.sockets.clients(id);
    };
};

// this omits properties that we don't want sent to the client
// this originally came about by setting an origin property to a Socket object
// JSON.stringify barfs. Thought about assigning a uuid to each socket
// but do we really want to send that to the client? Security?
// There will likely be other properties crop up, maybe encapsulate these in a single object?
function prepareEnvelope(envelope) {
    return _.omit(envelope, '__origin');
}
