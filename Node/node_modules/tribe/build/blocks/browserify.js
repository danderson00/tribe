var utils = require('tribe/utilities'),
    options = require('tribe/options'),
    browserify = require('browserify'),
    path = require('path'),
    fs = require('fs'),
    Q = require('q'),
    _ = require('underscore');

module.exports = function (property, configCallback) {
    return {
        to: function (targetPath) {
            return function (context) {
                var b = browserify(),
                    q = Q.defer(),
                    content;

                try {
                    if (configCallback) configCallback(b, context[property]);

                    _.each(context[property], function (file) {
                        b.add(file.path);
                    });

                    var readStream = b.bundle({ debug: options.debug }),
                        content = '';

                    readStream.on('data', function (data) {
                        content += data;
                    });

                    readStream.on('end', function () {
                        context.output = context.output || {};
                        context.output[targetPath] = content;
                        q.resolve(content);
                    });
                } catch (ex) {
                    q.reject(ex);
                }
                
                return q.promise;
            };
        }
    };
};
