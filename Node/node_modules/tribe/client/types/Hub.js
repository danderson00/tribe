T.Types.Hub = function (io, options) {
    var pubsub = options.pubsub,
        socket = io.connect(options.socketUrl);

    socket.on('message', function (envelope) {
        envelope.origin = 'server';
        pubsub.publish(envelope);
    });

    this.publish = function(envelope) {
        if (!socket)
            throw 'Hub must be connected before calling publish';
        if(envelope.origin !== 'server')
            socket.emit('message', envelope, function () {
                console.log('message acknowledged');
            });
    };

    this.join = function(channel) {
        socket.emit('join', channel);
    };

    this.startSaga = function(path, id, data) {
        socket.emit('startSaga', { path: path, id: id, data: data });
    };
};