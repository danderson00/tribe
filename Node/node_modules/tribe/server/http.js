var express = require('express'),
    app = express(),
    server = require('http').createServer(app),
    fs = require('q-io/fs'),
    path = require('path'),
    store = require('tribe/store/fs'),
    response = require('./response'),
    options = require('tribe/options'),
    _ = require('underscore');

var api = module.exports = {
    configure: function (modules) {
        // hard coded dependencies. Looked at including these with npm and browserify but minification with uglifyjs on them sucks
        app.use('/dependencies/knockout/', express.static(path.resolve(options.modulePath, 'node_modules/knockout/build/output')));
        app.use('/dependencies/jquery/', express.static(path.resolve(options.modulePath, 'node_modules/jquery/dist')));
        app.use('/dependencies/socket.io/', express.static(path.resolve(options.modulePath, 'node_modules/socket.io-client/dist')));
        app.use('/dependencies/composite/', express.static(path.resolve(options.modulePath, 'node_modules/tribe.composite/Build')));

        _.each(modules, api.addModule);
        return api;
    },
    start: function () {
        // turn this into a service
        app.get('/Data/:partition/:row', function (req, res) {
            store.get(req.params.partition, req.params.row)
                .then(function (data) {
                    res.send(data);
                })
                .fail(function () {
                    res.status(404).end();
                });
        });


        server.listen(options.port);
        return api;
    },
    addModule: function (module) {
        return module(app);
    },
    route: function (route) {
        return app.route(route);
    },
    response: response,
    app: app,
    server: server
};