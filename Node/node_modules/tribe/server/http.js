var express = require('express'),
    app = express(),
    server = require('http').createServer(app),
    fs = require('q-io/fs'),
    path = require('path'),
    log = require('tribe/logger'),
    store = require('tribe/store/fs'),
    options = require('tribe/options');

module.exports = {
    start: function () {
        // these are configuration driven that should be provided by the build engine
        app.get('/', function (req, res) {
            fs.read(options.basePath + 'Build/app.htm').then(function (data) {
                res.send(data);
            });
        });
        app.use('/', express.static(path.resolve(options.basePath, 'Build')));
        app.use('/Images/', express.static(path.resolve(options.basePath, 'Images')));
        app.use('/Build/', express.static(path.resolve(options.basePath, 'Build')));

        // hard coded dependencies. Looked at including these with npm and browserify but minification with uglifyjs on them sucks
        app.use('/knockout/', express.static(path.resolve(options.modulePath, 'node_modules/knockout/build/output')));
        app.use('/jquery/', express.static(path.resolve(options.modulePath, 'node_modules/jquery/dist')));
        app.use('/socket.io/', express.static(path.resolve(options.modulePath, 'node_modules/socket.io-client/dist')));
        app.use('/composite/', express.static(path.resolve(options.modulePath, 'node_modules/tribe.composite/Build')));


        // turn this into a service
        app.get('/Data/:partition/:row', function (req, res) {
            store.get(req.params.partition, req.params.row)
                .then(function (data) {
                    res.send(data);
                })
                .fail(function () {
                    res.status(404).end();
                });
        });


        server.listen(options.port);
    },
    registerService: function (uri, handler, verb) {
        app[verb || 'all'](uri, handler);
    },
    server: server
};