<div class="api content block">
    <div class="blockHeader">Panes</div>
    <div>
        <pre>TC.Utils.getPaneOptions = function(value, otherOptions)</pre>
        <p>Normalise the passed value and merge the other options.</p>

        <pre>TC.Utils.bindPane = function (node, element, paneOptions, context)</pre>
        <p>Load and bind the pane specified in paneOptions to the specified element and link it to the specified node.</p>

        <pre>TC.Utils.insertPaneAfter = function (node, target, paneOptions, context)</pre>
        <p>As bindPane, but create a new DIV element and insert it after the specified target.</p>
    </div>
</div>

<div class="api content block">
    <div class="blockHeader">Miscellaneous</div>
    <pre>TC.Utils.try = function(func, args, handleExceptions, message)</pre>
    <pre>TC.Utils.idGenerator = function () { return { next: function() }</pre>
    <pre>TC.Utils.getUniqueId = function ()</pre>
    <pre>TC.Utils.cleanElement = function (element)</pre>
</div>

<div class="api content block">
    <div class="blockHeader">Objects</div>
    <pre>TC.Utils.arguments = function (args)</pre>
    <pre>TC.Utils.removeItem = function (array, item)</pre>
    <pre>TC.Utils.inheritOptions = function(from, to, options)</pre>
    <pre>TC.Utils.evaluateProperty = function(target, property)</pre>
</div>

<div class="api content block">
    <div class="blockHeader">Embedded State</div>
    <pre>TC.Utils.embedState = function (model, context, node)</pre>
    <pre>TC.Utils.contextFor = function (element)</pre>
    <pre>TC.Utils.extractContext = function (koBindingContext)</pre>
    <pre>TC.Utils.extractNode = function (koBindingContext)</pre>
</div>

<div class="api content block">
    <div class="blockHeader">Events</div>
    <pre>TC.Utils.elementDestroyed = function (element) { return $.Deferred(); }</pre>
    <pre>TC.Utils.raiseDocumentEvent = function (name, data)</pre>
    <pre>TC.Utils.handleDocumentEvent = function (name, handler)</pre>
    <pre>jQuery.Event("destroyed")</pre>
</div>

<div class="api content block">
    <div class="blockHeader">Collections</div>
    <pre>TC.Utils.each = function (collection, iterator)</pre>
    <pre>TC.Utils.map = function (collection, iterator)</pre>
    <pre>TC.Utils.filter = function(array, iterator)</pre>
    <pre>$.complete = function (deferreds)</pre>
</div>

<div class="api content block">
    <div class="blockHeader">Paths</div>
    <pre>
                Path = function(path) { return {
                    withoutFilename: function() {
                    filename: function() {
                    extension: function() {
                    withoutExtension: function() {
                    combine: function (additionalPath) {
                    isAbsolute: function() {
                    makeAbsolute: function() {
                    makeRelative: function() {
                    asMarkupIdentifier: function() {
                    setExtension: function(extension) {
                    toString: function()
                }
            </pre>
</div>
