Tribe=window.Tribe||{},Tribe.SignalR=Tribe.SignalR||{},Tribe.SignalR.Client=function(n,t,i){var u=this,r;t.client.acceptServerMessage=function(t){var i=JSON.parse(t);i.server=!0,i.sync=!0,n.publish(i)},this.publishToServer=function(n,t,u){$.when(r).done(function(){i.publishToServer(n,t,u)})},this.joinChannel=function(i,f){function s(){e.serverEvents&&e.serverEvents.length>0&&(o=n.createLifetime(),o.subscribe(e.serverEvents,function(n,t){u.publishToServer(i,t,e.record)}))}var o,e=f===!0?{replay:!0}:f||{};return r||(r=$.connection.hub.start()),$.when(r).done(function(){t.server.joinChannel(i),e.replay&&t.server.replayChannel(i)}),s(),{leave:function(){o&&o.end(),u.leaveChannel(i)}}},this.leaveChannel=function(n){r&&$.when(r).done(function(){t.server.leaveChannel(n)})}};
/*!
 * Based on ASP.NET SignalR JavaScript Library v1.0.0 http://signalr.net/
 * License at https://github.com/SignalR/SignalR/blob/master/LICENSE.md
 */
(function(){function n(){throw"Tribe.SignalR must be initialised before use by calling TMH.initialise(pubsub, url)";}function t(n){function r(n,t){return function(){t.apply(n,$.makeArray(arguments))}}function i(n,t){var f,i,u,e,o;for(f in n)if(n.hasOwnProperty(f)){if(i=n[f],!i.hubName)continue;o=t?i.on:i.off;for(u in i.client)if(i.client.hasOwnProperty(u)){if(e=i.client[u],!$.isFunction(e))continue;o.call(i,u,r(i,e))}}}var t=$.signalR;$.hubConnection.prototype.createHubProxies=function(){var n={};return this.starting(function(){i(n,!0),this._registerSubscribedHubs()}).disconnected(function(){i(n,!1)}),n.hubImplementation=this.createHubProxy("hubImplementation"),n.hubImplementation.client={},n.hubImplementation.server={publish:function(){return n.hubImplementation.invoke.apply(n.hubImplementation,$.merge(["Publish"],$.makeArray(arguments)))},joinChannel:function(){return n.hubImplementation.invoke.apply(n.hubImplementation,$.merge(["JoinChannel"],$.makeArray(arguments)))},replayChannel:function(){return n.hubImplementation.invoke.apply(n.hubImplementation,$.merge(["ReplayChannel"],$.makeArray(arguments)))},leaveChannel:function(){return n.hubImplementation.invoke.apply(n.hubImplementation,$.merge(["LeaveChannel"],$.makeArray(arguments)))}},n},t.hub=$.hubConnection(n,{useDefaultPath:!1}),$.extend(t,t.hub.createHubProxies())}typeof $.signalR!="function"&&window.console&&window.console.log&&window.console.log("SignalR: SignalR is not loaded. Please ensure jquery.signalR-x.js is referenced before Tribe.js"),window.TMH={initialise:function(n,i){t(i||"signalr"),$.extend(TMH,new Tribe.SignalR.Client(n,$.connection.hubImplementation,new Tribe.SignalR.Publisher($.connection.hubImplementation)))},publishToServer:n,joinChannel:n,leaveChannel:n}})(),Tribe=window.Tribe||{},Tribe.SignalR=Tribe.SignalR||{},Tribe.SignalR.Publisher=function(n){function u(n,i){t.push(function(){r.publishToServer(n,i)})}function f(){if(t.length>0){var n=t;t=[],$.each(n,function(n,t){t()})}}function i(t){return t?t===$.signalR.connectionState.connected:n.connection.state===$.signalR.connectionState.connected}var r=this,t=[];this.publishToServer=function(t,r,f){r.server||(i()?n.server.publish(t,JSON.stringify(r),f===!0):u(t,r))},n.connection.stateChanged(function(n){i(n.newState)&&f()})},Tribe.PubSub.prototype.joinChannel=function(n,t){TMH.joinChannel(n,t)},Tribe.PubSub.Lifetime.prototype.joinChannel=function(n,t){var i=this.end,r=TMH.joinChannel(n,t);this.end=function(){r.leave(),i()}};