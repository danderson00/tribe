suite('tribe.pubsub.facet.publish', function () {
    var pubsubModule = require('../pubsub'),
        facetModule = require('../facet');

    test("facet does not publish messages when origin is server or replay", function () {
        var spy = sinon.spy(),
            pubsub = new pubsubModule({ sync: true, handleExceptions: false }),
            facet = new facetModule(pubsub, constructor);

        function constructor(facet) {
            facet.handles('trigger', function () {
                facet.publish('fires');
            });
        }

        pubsub.subscribe('fires', spy);
        facet.start();

        pubsub.publish({ topic: 'trigger', origin: 'server' });
        expect(spy.callCount).to.equal(0);

        facet.replay([{ topic: 'trigger' }]);
        expect(spy.callCount).to.equal(0);

        pubsub.publish({ topic: 'trigger' });
        expect(spy.callCount).to.equal(1);
    });

    test("facet does not publish messages when message is silent", function () {
        var spy = sinon.spy(),
            pubsub = new pubsubModule({ sync: true, handleExceptions: false }),
            facet = new facetModule(pubsub, constructor);

        function constructor(facet) {
            facet.handles('trigger', function () {
                facet.publish('fires');
            });
        }

        pubsub.subscribe('fires', spy);
        facet.start();
        pubsub.publish({ topic: 'trigger' });
        pubsub.publish({ topic: 'trigger', silent: true });
        expect(spy.callCount).to.equal(1);
    });
});
