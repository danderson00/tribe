var rxTest = require('../test')

suite('tribe.rx.test.context', function () {
    test('exposes pubsub as an Rx.Observable', function () {
        var context = rxTest.context(),
            value = context.envelopes.asScalar()

        context.pubsub.publish('topic', 1)
        expect(value()).to.deep.equal({ topic: 'topic', data: 1 })
        context.pubsub.publish('topic2', 2)
        expect(value()).to.deep.equal({ topic: 'topic2', data: 2 })
    })

    test('handles expressions', function () {
        var context = rxTest.context(),
            value = context.envelopes.where(x => x.topic === 'topic').asScalar()

        context.pubsub.publish('topic', 1)
        expect(value()).to.deep.equal({ topic: 'topic', data: 1 })
        context.pubsub.publish('topic2', 2)
        expect(value()).to.deep.equal({ topic: 'topic', data: 1 })
    })
})
