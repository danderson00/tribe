var Rx = require('rx')
require('../../Observable/queries')

suite('tribe.rx.Observable.queries', function () {
    test("topic filters by message topic", function () {
        var source = new Rx.Subject(),
            observable = source.topic('test').asScalar()

        source.onNext({ topic: 'test', value: 1 })
        expect(observable().value).to.equal(1)

        source.onNext({ topic: 'test2', value: 2 })
        expect(observable().value).to.equal(1)

        source.onNext({ topic: 'test', value: 3 })
        expect(observable().value).to.equal(3)

        source.onNext()
        expect(observable().value).to.equal(3)
    })

    test("data selects data property by name", function () {
        var source = new Rx.Subject(),
            observable = source.data('p1').asScalar()

        source.onNext({ data: { p1: 1 }})
        expect(observable()).to.equal(1)

        source.onNext({ data: { p1: 'test' }})
        expect(observable()).to.equal('test')

        source.onNext({})
        expect(observable()).to.be.undefined

        source.onNext()
        expect(observable()).to.be.undefined
    })

    test("data selects data object if no property specified", function () {
        var source = new Rx.Subject(),
            observable = source.data().asScalar()

            source.onNext({ data: { p1: 1 }})
            expect(observable()).to.deep.equal({ p1: 1 })

            source.onNext({ data: 'test' })
            expect(observable()).to.equal('test')

            source.onNext({})
            expect(observable()).to.be.undefined

            source.onNext()
            expect(observable()).to.be.undefined
    })
})
