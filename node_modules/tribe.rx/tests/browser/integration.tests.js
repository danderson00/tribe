var uuid = require('node-uuid')
require('../..')

suite('tribe.rx.browser.integration', function () {
    test("text is updated on new messages", function () {
        $('#template--rx-text').remove()
        $('head').append('<script type="text/template" id="template--rx-text"><span data-bind="text: messages.select(function (x) { return x.text })"></span></script>')

        var id = uuid.v4(),
            node = T.createNode('body', { path: '/rx/text', scope: { facetId: id } })

        return node.pane.is.rendered.then(function () {
            node.pane.pubsub.publish('topic', { text: 'test', facetId: id })
            expect($('span').text()).to.equal('test')
        })
    })

    test("foreach is updated on new messages", function () {
        $('#template--rx-foreach').remove()
        $('head').append('<script type="text/template" id="template--rx-foreach"><ul data-bind="foreach: messages.where(function (x) { return x.done })"><li data-bind="text: value"></li></ul></script>')

        var id = uuid.v4(),
            node = T.createNode('body', { path: '/rx/foreach', scope: { facetId: id } })

        return node.pane.is.rendered.then(function () {
            node.pane.pubsub.publish('topic', { done: true, facetId: id, value: 'one' })
            node.pane.pubsub.publish('topic', { done: true, facetId: id, value: 'two' })
            node.pane.pubsub.publish('topic', { facetId: id, value: 'three' })
            expect($('li').length).to.equal(2)
            expect($('li').text()).to.equal('onetwo')
        })
    })

    test("topic filters messages by topic", function () {
        $('#template--rx-topic').remove()
        $('head').append('<script type="text/template" id="template--rx-topic"><ul data-bind="foreach: topic(\'a\')"><li /></ul></script>')

        var id = uuid.v4(),
            node = T.createNode('body', { path: '/rx/topic', scope: { facetId: id } })

        return node.pane.is.rendered.then(function () {
            node.pane.pubsub.publish('a')
            node.pane.pubsub.publish('a')
            node.pane.pubsub.publish('b')
            expect($('ul').children().length).to.equal(2)
        })
    })
})
