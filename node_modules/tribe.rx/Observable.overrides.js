var Rx = require('rx')

Rx.Observable.prototype.count = function (predicate) {
    var count = 0
    return createObservable(this, function () {
        return ++count
    }, predicate, 0)
}

Rx.Observable.prototype.sum = function (predicate) {
    var sum = 0
    return createObservable(this, function (value) {
        return sum += predicate ? predicate.apply(this, arguments) : value;
    }, undefined, 0)
}


function createObservable(source, valueResolver, predicate, initialValue) {
    return Rx.Observable.create(function (observer) {
        source.subscribe(
            function () {
                if(!predicate || predicate.apply(this, arguments))
                    observer.onNext(valueResolver.apply(this, arguments))
            },
            function () { observer.onError.apply(observer, arguments) },
            function () { observer.onCompleted.apply(observer, arguments) }
        )
        if(initialValue !== undefined)
            observer.onNext(initialValue)
    })
}
