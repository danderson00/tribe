// add some sugar to automatically call asScalar on Rx observables
// and only evaluate the binding string once, not every time the observable changes
wrapBinding('text')

function wrapBinding(name) {
    var domDataKey = '__tribe_rx__' + name + 'DomDataKey__',
        oldBinding = ko.bindingHandlers[name]

    ko.bindingHandlers[name] = {
        init: function (element, valueAccessor) {
            var value = valueAccessor()
            if(value && value.asScalar) {
                value = value.asScalar()
                ko.utils.domData.set(element, domDataKey, value)
            }
            return oldBinding.init(element, function() { return value })
        },
        update: function (element, valueAccessor) {
            return oldBinding.update(element, function () {
                var storedObservable = ko.utils.domData.get(element, domDataKey)
                return storedObservable ? storedObservable() : valueAccessor()
            })
        }
    }
}
