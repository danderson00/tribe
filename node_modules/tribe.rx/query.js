var Rx = require('rx'),
    store = require('tribe/client/eventStore'),
    expressions = require('tribe.expressions')

module.exports = function (pane, context, topic, scope) {
    return Rx.Observable.create(function (observer) {
        var token = {}
        context.renderOperation.add(token);

        store.retrieve(topic, scope).then(function (envelopes) {
            envelopes.forEach(function (envelope) {
                try {
                    observer.onNext(envelope)
                } catch(error) {
                    log.error('Error processing query', error)
                }
            })

            pane.pubsub.subscribe(topic || '*', function (data, envelope) {
                try {
                    observer.onNext(envelope)
                } catch(error) {
                    log.error('Error processing query', error)
                }
            }, expressions.create(scope, 'data'))

            context.renderOperation.complete(token)
        })
    })
}
