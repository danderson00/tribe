var actor = require('tribe.pubsub/actor'),
    Rx = require('rx')

actor.prototype.__defineGetter__('envelopes', function () {
    var self = this,
        observable = Rx.Observable.create(function (observer) {
            // a new observable is created (i.e. this is called) for each predicate
            // maybe a bit inefficient. there must be a better way
            self.handles('*', function (data, envelope) {
                observer.onNext(envelope)
            })
        })

    // cache result
    this.__defineGetter__('envelopes', function () {
        return observable
    })

    return observable
})

actor.prototype.__defineGetter__('messages', function () {
    var observable = this.envelopes.select(function (x) { return x.data })

    this.__defineGetter__('messages', function () {
        return observable
    })

    return observable
})
