var Q = require('q'),
    _ = require('underscore'),
    stores = {
        sqlite3: require('./sqlite3'),
        //indexeddb: require('./indexeddb')
    };

module.exports = function (entities, options) {
    var store = stores[options.type];

    return store.open(options, entities).then(function () {
        var hash = _.reduce(entities, function (hash, entity) {
            hash[entity.name] = entity;
            return hash;
        }, {});

        return {
            entity: function (name) {
                // this must be a lightweight operation, and the entityContainer must remain stateless, i.e. functions are deterministic across instances
                return store.entityContainer(name, hash[name].indexes);
            }
        };
    });
}