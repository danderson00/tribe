var Q = require('q'),
    _ = require('underscore');

module.exports = function (store, entities, options) {
    return store.open(options, entities).then(function () {
        var hash = _.reduce(entities, function (hash, entity) {
            hash[entity.name] = entity;
            return hash;
        }, {});

        return {
            entity: function (name) {
                // this must be a lightweight operation, and the entityContainer must remain stateless, i.e. functions are deterministic across instances
                return store.entityContainer(name, hash[name].indexes);
            },
            close: function () {
                if (store.close) store.close();
            }
        };
    });
}