var predicateSql = require('./predicateSql'),
    expressions = require('tribe.expressions'),
    _ = require('underscore');

module.exports = {
    store: function (entityData, entity) {
        return {
            sql: "insert into " + safeName(entityData.name) + " values (?)",
            parameters: [JSON.stringify(entity)]
        };
    },
    insertIndexes: function (entityData, entity, rowid) {
        var columns = _.unique(_.flatten(entityData.indexes || []));
        return _.flatten(columns.map(indexInsert));

        function indexInsert(index) {
            var value = expressions.evaluateKeyPath(index, entity),
                values = (value && value.constructor === Array) ? value : [value],
                sql = "insert into " + indexTableName() + " (id, value) values (?, ?)"

            return values.map(function (indexValue) {
                return {
                    sql: sql,
                    parameters: [rowid, indexValue]
                }
            })

            function indexTableName() {
                return safeName(entityData.name + '_' + index);
            }
        }
    },
    retrieve: function (entity, predicates) {
        var query = predicateSql.toSql(entity, predicates),
            tableName = safeName(entity.name);
        query.sql = "SELECT " + tableName + ".rowid as __rowid, " + tableName + ".* FROM " + tableName + query.sql;
        return query;
    },
    clear: function (entityName) {
        return {
            sql: "DELETE FROM " + safeName(entityName),
            parameters: []
        }
    }
};

function safeName(name) {
    return name.replace(/\./g, '_');
}
