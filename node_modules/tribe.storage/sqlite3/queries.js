var _ = require('underscore');

module.exports = {
    store: function (indexes, envelope) {
        // indexes will eventually support keyPaths instead of just properties on the data object
        return {
            query: "insert into messages " + columnList() + " values " + paramList(indexes.length + 3),
            params: paramArray()
        };

        function columnList() {
            return '(' + ['id', 'topic', 'envelope'].concat(indexes).join(',') + ')';
        }

        function paramArray() {
            return [envelope.id, envelope.topic, JSON.stringify(envelope)].concat(_.map(indexes, function (index) {
                return envelope.data && envelope.data[index];
            }));
        }
    },
    retrieve: function (options) {
        return {
            query: query(),
            params: params()
        };

        function query() {
            return "select * from messages where " + options.indexName + indexClause() +
                (options.startId ? " and id >= ?" : '');
        }

        function indexClause() {
            return options.indexValue.constructor === Array ?
                ' in ' + paramList(options.indexValue.length) :
                ' = ?';
        }

        function params() {
            var params = options.indexValue.constructor === Array ? options.indexValue.concat() : [options.indexValue];
            if (options.startId) params.push(options.startId);
            return params;
        }
    }
};

function paramList(length) {
    return '(' + new Array(length + 1).join(',?').substring(1) + ')'
}
