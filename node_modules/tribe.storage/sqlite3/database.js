var Q = require('q'),
    sqlite3 = require('sqlite3'),
    TransactionDatabase = require("sqlite3-transactions").TransactionDatabase,

    db;

var api = module.exports = {
    open: function (filename) {
        db = new TransactionDatabase(new sqlite3.Database(filename || ':memory:'));
        return api;
    },
    run: operation('run'),
    get: operation('get'),
    all: operation('all'),
    transaction: transaction,
    close: function () {
        db && db.close();
        delete db;
    }
};

function operation(name) {
    return function (query, parameters, transaction) {
        if (query.sql) {
            transaction = parameters;
            parameters = query.parameters;
            query = query.sql;
        }

        var deferred = Q.defer();

        // console.log(query)
        // parameters && console.log(JSON.stringify(parameters))

        (transaction || db)[name](query, parameters, function (err, result) {
            if (err)
                deferred.reject(err);
            else
                deferred.resolve(result || this.lastID);
        });

        return deferred.promise;
    }
}

function transaction(callback) {
    var deferred = Q.defer();

    db.beginTransaction(function (err, transaction) {
        if (err)
            deferred.reject(err);

        callback(transaction).then(function (result) {
            transaction.commit(function (err) {
                if (err)
                    deferred.reject(err);
                else
                    deferred.resolve(result);
            })
        })
    })

    return deferred.promise;
}
