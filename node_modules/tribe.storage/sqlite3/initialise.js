var Q = require('q'),
    _ = require('underscore');

module.exports = function (entity, database) {
    var indexes = _.unique(_.flatten(entity.indexes || [])),
        tableName = safeName(entity.name),
        existingTables;

    return loadTableData()
        .then(createTable)
        .then(createIndexTables);

    function loadTableData(name) {
        return database.all("select name from sqlite_master where type='table' and name like '" + tableName + "%'")
            .then(function (rows) {
                existingTables = _.pluck(rows, 'name');
            });
    }

    function createTable() {
        if (existingTables.indexOf(tableName) === -1) {
            return database.run("create table " + tableName + " (content text)");
        }
    }

    function createIndexTables() {
        return Q.all(indexes.map(function (index) {
            var indexTableName = tableName + '_' + safeName(index),
                indexTableExists = existingTables.indexOf(indexTableName) > -1;

            if (!indexTableExists) {
                return createIndexTable().then(createIndex);
            }

            function createIndexTable() {
                return database.run("create table " + indexTableName + " (id real, value text)");
            }

            function createIndex() {
                return database.run("create index " + indexTableName + "__index on " + indexTableName + " (id)");
            }
        }));
    }

    function safeName(name) {
        return name.replace(/\./g, '_');
    }
};
