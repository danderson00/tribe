var log = require('tribe.logger'),
    stores = {
        sqlite3: require('./sqlite3'),
        //indexeddb: require('./indexeddb')
    },
    store;

module.exports = {
    initialise: function (options, indexes) {
        store = stores[options.name];
        return store.initialise(options, indexes).then(function () {
            log.info('Event store initialised (' + options.name + ')');
        });
    },
    store: function (envelope) {
        if (!store) throw new Error('initialise must be called first');
        return store.add(envelope);
    },
    retrieve: function (options) {
        if (!store) throw new Error('initialise must be called first');
        return store.query(options);
    }
};

var newApi = {
    open: function (options) {
        options = {
            type: 'sqlite3',
            name: 'storename',
            filename: ':memory:'
        };

        options = {
            type: 'indexeddb',
            filename: ':memory:'
        };

        var api = {
            entity: entityContainer
        };
        


        function entityContainer(name) {
            var api = function (name) { return entityApi(name); };
            api.create = function (name, indexes) { };
            api.delete = function (name) { }
            return api;
        }

        function entityApi(name) {
            return {
                store: function (data) {
                },
                retrieve: function (expressions) {
                }
            };
        }
    }
}