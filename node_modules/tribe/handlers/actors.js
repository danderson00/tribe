var store = require('tribe/store/fs'),
    serializer = require('tribe/utilities/serializer');

var actors = {
    start: function (path, id, data) {
        var actor = createActor(path);
        var onstart = actor.handles.onstart;
        if (onstart) onstart(data);
        storeActorData(actor, path, id);
    },
    handle: function (envelope) {
        if (envelope.actorId) {
            store.get(envelope.actorId, envelope.actorId)
                .then(function (data) {
                    var actor = createActor(data.path);
                    actor.data = serializer.deserialize(data.data);
                    var handler = actor.handles[envelope.topic];
                    if (handler) handler(envelope.data, envelope);
                    storeActorData(actor, data.path, envelope.actorId);
                })
                .fail(console.error);
        }
    },
    register: function (path, constructor) {
        actors[path] = { constructor: constructor };
    }
};

module.exports = actors;
    
function storeActorData(actor, path, id) {
    store.put(id, id, {
        path: path,
        data: serializer.serialize(actor.data),
        id: id
    });
}

function createActor(path) {
    var pubsub = require('tribe.pubsub');
    return new Tribe.PubSub.Actor(pubsub, actors[path].constructor);
}
