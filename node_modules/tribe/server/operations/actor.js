var eventStore = require('tribe/storage').entity('messages'),
    actors = require('tribe/actors');

module.exports = function (options, context) {
    //{ actor: '/path', scope: 'scope' }
    // authenticate and authorise!
    var definition = actors.definition(options.actor),
        expression = definition.expression;

    if (expression) {
        subscribe(definition.topics, { p: expression.p, v: options.id });
        returnMessages({ p: expression.p, v: options.id });
    } else {
        subscribe(definition.topics);
        context.ack({});
    }

    function subscribe(topics, expression) {
        context.pubsub.subscribe(topics, function (data, envelope) {
            if (envelope.sourceId !== context.clientId)
                context.socket.emit('message', envelope);
        }, expression);
    }

    function returnMessages(expression) {
        return eventStore.retrieve(expression)
            .then(function (envelopes) {
                context.ack({ envelopes: envelopes });
            })
            .fail(function (err) {
                log.error('Failed to retrieve actor messages', err);
                context.ack(null, err);
            });
    }
}