var eventStore = require('tribe/storage').entity('messages'),
    facets = require('tribe/facets'),
    expressions = require('tribe.expressions'),
    log = require('tribe.logger'),
    _ = require('underscore');

module.exports = function (options, context) {
    // authorise!

    log.silly("Client requested scope " + JSON.stringify(options.scope));

    var expression = expressions.create.fromScope(options.scope);

    subscribe('*', expression);

    if (options.since)
        expression = expression.concat({ p: 'seq', o: '>', v: options.since });

    return returnMessages(expression);

    function subscribe(topics, expression) {
        context.pubsub.subscribe(topics, function (data, envelope) {
            if (envelope.sourceId !== context.clientId && (!envelope.hasBeenBroadcastTo || !envelope.hasBeenBroadcastTo(context.clientId))) {
                context.socket.emit('message', envelope);
                envelope.addToBroadcastList && envelope.addToBroadcastList(context.clientId);
            }
        }, expression);
    }

    function returnMessages(expression) {
        return eventStore.retrieve(expression)
            .then(function (envelopes) {
                context.ack({ envelopes: envelopes });
            })
            .fail(function (err) {
                log.error('Failed to retrieve facet messages', err);
                context.ack(null, err);
            });
    }
}
