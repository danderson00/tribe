suite('tribe.browser.integration.flow.startChild', function () {
    test("publishing messages triggers starting children", function (done) {
        var pubsub = require('tribe.pubsub'),
            node = T.appendNode('body', { path: '/tests/childFlow', pubsub: pubsub })

        setTimeout(function () {
            // navigation will occur synchronously in this case (no transition)
            expect($('span').text()).to.equal('two')
            pubsub.publish('topic')

            // ok this is nasty. The flow binding handler is broken, it the renderOperation completes before the flow is rendered
            // just hacking it in and getting it working for now
            setTimeout(function () {
                expect($('span').text()).to.equal('four')
                pubsub.publish('childTopic')

                setTimeout(function () {
                    expect($('span').text()).to.equal('five')
                    pubsub.publish('topic2')

                    setTimeout(function () {
                        expect($('span').text()).to.equal('three')
                        done()
                    }, 20)
                }, 20)
            }, 20)
        }, 20)
    })

    test("child flow is scoped to triggering message data by default", function (done) {
        var pubsub = require('tribe.pubsub'),
            node = T.appendNode('body', { path: '/tests/childFlow', pubsub: pubsub })

        setTimeout(function () {
            // navigation will occur synchronously in this case (no transition)
            expect($('span').text()).to.equal('two')
            pubsub.publish('topic', { p1: 1 })

            // ok this is nasty. The flow binding handler is broken, it the renderOperation completes before the flow is rendered
            // just hacking it in and getting it working for now
            setTimeout(function () {
                expect($('span').text()).to.equal('four')
                pubsub.publish('childTopic')

                setTimeout(function () {
                    expect($('span').text()).to.equal('four')
                    pubsub.publish('childTopic', { p1: 1 })

                    setTimeout(function () {
                        expect($('span').text()).to.equal('five')
                        done()
                    }, 20)
                }, 20)
            }, 20)
        }, 20)
    })
})
