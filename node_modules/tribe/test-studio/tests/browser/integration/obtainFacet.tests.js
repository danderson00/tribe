var pubsub = require('tribe.pubsub'),
    gateway = require('tribe/client/gateway'),
    uuid = require('node-uuid'),
    pubsub;

// this effectively integration tests restoreFacet as well, but there probably should be some specific tests
suite('tribe.browser.integration.obtainFacet', function () {
    test("facets receieve correct number of messages and are released correctly", function () {
        var facetId = uuid.v4();

        return pubsub.obtainFacet('tests/obtain', { facetId: facetId })
            .then(function (facet) {
                pubsub.publish('topic', { facetId: facetId });
                expect(facet.count).to.equal(1);
                pubsub.releaseFacet(facet);
                return gateway.publish({ topic: 'topic', data: { facetId: facetId } });
            })
            .then(function () {
                return pubsub.obtainFacet('tests/obtain', { facetId: facetId });
            })
            .then(function (facet) {
                expect(facet.count).to.equal(2);
            });
    });

    test("facet with single property scope can be obtained with a scalar", function () {
        var facetId = uuid.v4();

        return pubsub.obtainFacet('tests/obtain', facetId)
            .then(function (facet) {
                pubsub.publish('topic', { facetId: facetId });
                expect(facet.count).to.equal(1);
                pubsub.releaseFacet(facet);
                return gateway.publish({ topic: 'topic', data: { facetId: facetId } });
            })
            .then(function () {
                return pubsub.obtainFacet('tests/obtain', facetId);
            })
            .then(function (facet) {
                expect(facet.count).to.equal(2);
            });
    });

    test("facet inherits scope from pubsub scope", function () {
        var facetId = uuid.v4();
        pubsub = pubsub.createLifetime({ facetId: facetId });

        return pubsub.obtainFacet('tests/obtain')
            .then(function (facet) {
                pubsub.publish('topic', { facetId: facetId });
                pubsub.publish('topic', { facetId: 'otherId' });
                expect(facet.count).to.equal(1);
                pubsub.releaseFacet(facet);
                return gateway.publish({ topic: 'topic', data: { facetId: facetId } }).then(function () {
                    return gateway.publish({ topic: 'topic', data: { facetId: 'otherId' } });
                });
            })
            .then(function () {
                return pubsub.obtainFacet('tests/obtain', facetId);
            })
            .then(function (facet) {
                expect(facet.count).to.equal(2);
            });
    });

    test("facets do not republish messages when obtaining", function () {
        var facetId = uuid.v4(),
            spy = sinon.spy();

        // The other tests fail when using a fresh pubsub, I don't know why and I couldn't be bothered to find out right now
        pubsub = new (require('tribe.pubsub/pubsub'))({ sync: true });

        pubsub.subscribe('fires', spy);

        return pubsub.obtainFacet('tests/republish', { facetId: facetId })
            .then(function (facet) {
                facet.__facet.pubsub.publish('trigger', { facetId: facetId });
                expect(spy.callCount).to.equal(1);
                pubsub.releaseFacet(facet);
                return pubsub.obtainFacet('tests/republish', { facetId: facetId });
            })
            .then(function (facet) {
                expect(spy.callCount).to.equal(1);
            });
    });
});
