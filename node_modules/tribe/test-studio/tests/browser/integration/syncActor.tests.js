var pubsub = require('tribe.pubsub'),
    actor = require('tribe.pubsub/actor'),
    hub = require('tribe/client/hub'),
    uuid = require('node-uuid');

suite('tribe.browser.integration.syncActor', function () {
    test("actor inherits scope from pubsub scope", function () {
        var actorId = uuid.v4();
        pubsub = pubsub.createLifetime({ actorId: actorId });

        return hub.publish({ topic: 'topic', data: { actorId: actorId } })
            .then(function () {
                return hub.publish({ topic: 'topic', data: { actorId: 'otherId' } });
            })
            .then(function () {
                return pubsub.syncActor(new actor(pubsub, actorConstructor), { actorId: actorId });
            })
            .then(function (actor) {
                expect(actor.count).to.equal(1);
            });
    });
});

function actorConstructor(actor) {
    var self = this;

    actor.isDistributed();
    actor.isScopedTo('actorId');

    actor.handles({
        'topic': function () {
            self.count++;
        }
    });

    this.count = 0;
}
