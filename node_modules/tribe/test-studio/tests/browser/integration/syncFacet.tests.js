var pubsub = require('tribe.pubsub'),
    facet = require('tribe.pubsub/facet'),
    gateway = require('tribe/client/gateway'),
    uuid = require('node-uuid')

suite('tribe.browser.integration.syncFacet', function () {
    test("facet inherits scope from pubsub scope", function () {
        var facetId = uuid.v4()
        var lifetime = pubsub.createLifetime({ facetId: facetId })

        return gateway.publish({ topic: 'topic', data: { facetId: facetId } })
            .then(function () {
                return gateway.publish({ topic: 'topic', data: { facetId: 'otherId' } })
            })
            .then(function () {
                return lifetime.syncFacet(new facet(lifetime, createFacetConstructor('topic')))
            })
            .then(function (facet) {
                expect(facet.count).to.equal(1)
            })
    })

    test("facets can be synced without scope", function () {
        var topic = uuid.v4()

        return gateway.publish({ topic: topic, data: { value: 'a' } })
            .then(function () {
                return gateway.publish({ topic: topic, data: { value: 'b' } })
            })
            .then(function () {
                return pubsub.syncFacet(new facet(pubsub, createFacetConstructor(topic)))
            })
            .then(function (facet) {
                expect(facet.count).to.equal(2)
            })
    })
})

function createFacetConstructor(topic) {
    return function(facet) {
        var self = this

        facet.isDistributed()
        facet.isScopedTo('facetId')

        facet.handles(topic, function () {
            self.count++
        })

        this.count = 0
    }
}
