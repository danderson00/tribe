suite('tribe.browser.integration.flow', function () {
    test("flow renders start pane with data from parent pane", function () {
        var pubsub = require('tribe.pubsub'),
            node = T.appendNode('body', { path: '/tests/flow', pubsub: pubsub, data: 'one' }),
            context = T.Utils.contextFor($('body div div'))

        // the initial render of the flow will be async due to it obtaining the underlying actor
        return context.renderOperation.promise.then(function () {
            expect($('span').text()).to.equal('one')
        })
    })

    test("publishing messages triggers navigation", function () {
        var pubsub = require('tribe.pubsub'),
            node = T.appendNode('body', { path: '/tests/flow', pubsub: pubsub })

        return T.Utils.contextFor($('body div div')).renderOperation.promise.then(function () {
            // navigation will occur synchronously in this case (no transition)
            pubsub.publishSync('topic')
            expect($('span').text()).to.equal('two')
        })
    })

    test("scope is passed from bindings", function () {
        var pubsub = require('tribe.pubsub'),
            node = T.appendNode('body', { path: '/tests/flow', data: { value: 'test' }, pubsub: pubsub })

        return T.Utils.contextFor($('body div div')).renderOperation.promise.then(function () {
            pubsub.publishSync('topic', { value: 'test' })
            pubsub.publishSync('topic2', { value: 'test2' })
            expect($('span').text()).to.equal('two')
        })
    })

    test("flow renders start pane with data specified in flow", function () {
        var pubsub = require('tribe.pubsub'),
            node = T.appendNode('body', { path: '/tests/dataFlow', pubsub: pubsub }),
            context = T.Utils.contextFor($('body div div'))

        return context.renderOperation.promise.then(function () {
            expect($('span').text()).to.equal('test1')
        })
    })

    test("flow navigates to panes with data specified in flow", function () {
        var pubsub = require('tribe.pubsub'),
            node = T.appendNode('body', { path: '/tests/dataFlow', pubsub: pubsub }),
            context = T.Utils.contextFor($('body div div'))

        return context.renderOperation.promise.then(function () {
            pubsub.publishSync('topic')
            expect($('span').text()).to.equal('test2')
        })
    })

    test("flow navigates to panes with data specified when calling flow.to", function () {
        var pubsub = require('tribe.pubsub'),
            node = T.appendNode('body', { path: '/tests/dataFlow', pubsub: pubsub }),
            context = T.Utils.contextFor($('body div div'))

        return context.renderOperation.promise.then(function () {
            pubsub.publishSync('topic2')
            expect($('span').text()).to.equal('test3')
        })
    })
})
