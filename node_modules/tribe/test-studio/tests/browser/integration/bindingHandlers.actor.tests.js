suite('tribe.browser.integration.bindingHandlers.actor', function () {
    test("actors are released when pane is removed from DOM", function (done) {
        var spy = sinon.spy()
        var pubsub = require('tribe.pubsub'),
            node = T.appendNode('body', { path: '/tests/actor', pubsub: pubsub, data: constructor })

        node.pane.is.rendered.then(function () {
            // is.rendered only resolves when the individual pane has finished rendering, not the whole tree,
            // i.e. renderComplete, so dispose doesn't fire if we do this synchronously. setTimeout it...
            setTimeout(function () {
                pubsub.publishSync('test')
                node.pane.remove()
                pubsub.publishSync('test')
                expect(spy.callCount).to.equal(1)
                done()
            })
        })

        function constructor(actor) {
            actor.handles('test', spy)
        }
    })

    test("actors can be virtual elements", function (done) {
        var spy = sinon.spy()
        var pubsub = require('tribe.pubsub'),
            node = T.appendNode('body', { path: '/tests/actorVirtual', pubsub: pubsub, data: constructor })

        node.pane.is.rendered.then(function () {
            setTimeout(function () {
                pubsub.publishSync('test')
                node.pane.remove()
                pubsub.publishSync('test')
                expect(spy.callCount).to.equal(1)
                done()
            })
        })

        function constructor(actor) {
            actor.handles('test', spy)
        }
    })
})
