var options = require('tribe/options'),
    sqlite3 = require('sqlite3'),
    path = require('path'),
    fs = require('fs'),
    _ = require('underscore');

module.exports = function (api, indexes) {
    var filename = options.eventStore.filename,
        inMemory = filename === ':memory:',
        fullPath = inMemory ? filename : path.resolve(options.basePath, filename),
        exists = inMemory ? api.db : fs.existsSync(fullPath);

    api.db = api.db || new sqlite3.Database(fullPath);

    return api.serialise(function (db, fail) {
        if (!exists)
            db.exec("create table messages (id int, envelope text)", fail);

        if (indexes)
            db.all("pragma table_info(messages)", function (err, rows) {
                if (fail(err)) return;

                return api.serialise(function (db, fail) {
                    var existing = _.without(_.pluck(rows, 'name'), 'id', 'envelope');

                    _.each(indexes, function (index) {
                        if (existing.indexOf(index) === -1) {
                            db.exec("alter table messages add column " + index + " string", fail);
                            db.exec("create index " + index + " on messages (" + index + ")", fail);
                            db.exec("create index id_" + index + " on messages (id, " + index + ")", fail);
                        }
                    });
                });
            });
    });
};