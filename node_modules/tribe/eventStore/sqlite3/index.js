// the sqlite3 eventStore adapter is intended for use on a single, non-clustered instance, mostly due to the sequence implementation.
// Using a SQL autoincrement column for the message ID will enable clustering, but this has performace penalties.
// For clustering on a single machine, a simple timestamp with precision in ticks is probably sufficient and avoids autoincrement.

var database = require('./database'),
    initialise = require('./initialise'),
    sequence = require('./sequence'),
    queries = require('./queries'),
    _ = require('underscore'),
    indexes;

var api = module.exports = {
    initialise: function (options, newIndexes) {
        indexes = newIndexes;
        return database
            .open(options.filename)
            .initialise(indexes)
            .then(sequence.initialise);
    },
    add: function (envelope) {
        envelope.id = sequence.next();
        return database.run(queries.store(indexes, envelope)).then(function () {
            return envelope.id;
        });
    },
    query: function (options) {
        return database.all(queries.retrieve(options)).then(function (rows) {
            return _.map(rows, function (row) {
                return JSON.parse(row.envelope);
            });
        });
    }
};