var build = require('tribe/build'),
    memory = require('tribe/server/modules/memory'),
    utils = require('tribe/utilities'),
    options = require('tribe/options'),
    log = require('tribe/logger'),
    archy = require('archy'),
    through = require('through'),
    _ = require('underscore');

build.activities.register('app', function () {

    return {
        render: function (context, b) {
            // first two are synchronous
            build.blocks('renderTemplate')('app').to('app.htm', 'app')(context, b);
            build.blocks('renderTemplate')('app', { mobile: true }).to('app.mobile.htm', 'app')(context, b);
            build.blocks('combineContents')('css').to('app.css', 'app')(context, b);

            return build.blocks('browserify')('js', configure).to('app.js', 'app')(context, b);
        },
        output: function (context, b) {
            memory.register(b.name || 'app', context.app);

            log.debug('Application build: ' + utils.log.contentSize(context.app));
            //if(context.appDependencies)
            //    try {
            //        var deps = utils.browserify.dependencies(context.appDependencies);
            //        //log.debug(archy(utils.browserify.toDisplayTree(trees, build.name)));
            //        log.debug(deps.files.join('\n'));
            //    } catch (e) {
            //        log.error('Failed to generate dependencies for ' + build.name, e);
            //    }
        }
    };
});

function configure(b, files) {
    b.require(require.resolve('tribe/client'), { expose: 'tribe' });
    b.transform(utils.streams.throughTransform(function (source, file) {
        return "T.scriptEnvironment = { resourcePath: '" + file.resourcePath + "' };\n" + source;
    }, files));
}
