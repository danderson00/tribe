var pubsub = require('tribe.pubsub'),
    actorModule = require('tribe.pubsub/actor'),
    log = require('tribe/logger'),
    _ = require('underscore');

var api = module.exports = {
    actors: {},
    register: function (path, constructor) {
        try {
            api.actors[path] = {
                constructor: constructor,
                definition: extractDefinition(path, constructor)
            };
            log.debug('Registered actor ' + path);
        } catch (ex) {
            log.error('Unable to register actor ' + path, ex);
        }
    },
    indexes: function () {
        return _.unique(_.reduce(api.actors, function (indexes, actor) {
            // we only have the property message filter at the moment
            if (actor.definition.messageFilter)
                indexes.push(actor.definition.messageFilter.options.property);
            return indexes;
        }, []));
    }
};

function extractDefinition(path, constructor) {
    var actor = new actorModule(pubsub, constructor);
    return {
        path: path,
        messageFilter: actor.messageFilter,
        topics: _.keys(actor.handles)
    };
}

function createActor(constructor) {
    return new Tribe.PubSub.Actor(pubsub, constructor);
}
