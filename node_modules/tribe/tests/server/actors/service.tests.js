suite('tribe.actors.service.integration', function () {
    var service = require('tribe/actors/service'),
        actors = require('tribe/actors'),
        storage = require('tribe/storage'),
        Q = require('q');

    test("service returns messages saved to event store", function () {
        actors.register('serviceTest', function (actor) {
            actor.mapsMessagePropertyToId('data.testId');
        });

        return storage.initialise([{ name: 'messages', indexes: ['data.testId'] }])
            .then(function () {
                var eventStore = storage.entity('messages');
                return eventStore.store([
                    { topic: 'test', data: { testId: 1 } },
                    { topic: 'test', data: { testId: 2 } },
                    { topic: 'test', data: { testId: 1 } }
                ]);
        }).then(function () {
            return service({ name: 'serviceTest', id: 1 });
        }).then(function (result) {
            expect(result.envelopes.length).to.equal(2);
            expect(result.envelopes[0]).to.deep.equal({ topic: 'test', data: { testId: 1 } });
            expect(result.envelopes[1]).to.deep.equal({ topic: 'test', data: { testId: 1 } });
        });
    });
});