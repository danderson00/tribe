var eventStore = require('tribe/client/eventStore'),
    validation = require('./validation')

// force browserify to include any modules that may be required here
require('./Pubsub.extensions')
require('tribe/actors/extensions')
require('./worker')
require('./debugActions')
require('./bindingHandlers')
require('./events')
require('./builtins')
require('./Array.extensions')

require('tribe.rx')

var tribe = module.exports = {
    // client
    gateway: require('./gateway'),
    services: require('./services'),    
    resetCache: resetCache,    
    initialize: function (options) {
        tribe.options.apply(options)
        validation.initialize(tribe.options)
    },

    // common
    pubsub: require('tribe.pubsub'),
    register: require('tribe/register'),
    options: require('tribe/options')
}

// composite has a logger packaged, but use the node version as it will likely get updated
T.logger = require('tribe.logger')

function resetCache(refreshPage) {
    eventStore.clear()
    if(refreshPage)
        window.location.href = window.location.href
}