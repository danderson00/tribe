var hub = require('./hub'),
    actors = require('tribe/actors'),
    pubsub = require('tribe.pubsub/pubsub'),
    lifetime = require('tribe.pubsub/lifetime');

pubsub.prototype.obtainActor = function (path, id) {
    var self = this;

    if (path.charAt(0) !== '/')
        path = '/' + path;

    var actor = actors.create(self, path, id);

    return attachToHub(path, actor, true).then(function (data) {
        actors.replay(actor, data.envelopes);
        return actor.start().instance;
    });
};

pubsub.prototype.startActor = function (path, id, options) {
    if (path.charAt(0) !== '/')
        path = '/' + path;
    options = options || {};

    var actor = actors.create(this, path, id);

    if (actor.metadata.isDistributed && options.local !== true)
        attachToHub(path, actor, false);

    return actor.start(options.data);
};

// need to also be able to detach
function attachToHub(path, actor, replay) {
    actor.pubsub.subscribe(actor.topics, function (message, envelope) {
        hub.publish(envelope);
    });
    return hub.subscribe({ actor: path, id: actor.id, replay: replay });
}

lifetime.prototype.startActor = pubsub.prototype.startActor;
lifetime.prototype.obtainActor = pubsub.prototype.obtainActor;
