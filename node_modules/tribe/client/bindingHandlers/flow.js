ko.bindingHandlers.flow = {
    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
        var paneHandler = ko.bindingHandlers.pane,
            pubsub = T.Utils.extractNode(bindingContext).pane.pubsub,
            context = T.Utils.extractContext(bindingContext),
            path = '/__flows/' + ko.unwrap(valueAccessor()),
            token = {}

        context.renderOperation.add(token);

        pubsub.obtainActor(path, allBindingsAccessor().scope).then(function (actor) {
            actor.pane.subscribe(updateBinding)
            updateBinding()
            context.renderOperation.complete(token)

            function updateBinding() {
                paneHandler.update(element, actor.pane, function () { return { handlesNavigation: true } }, viewModel, bindingContext)
            }
        }).fail(function (err) {
            T.logger.error('Failed to retrieve flow', err);
        })

        return { controlsDescendantBindings: true }
    }
}
