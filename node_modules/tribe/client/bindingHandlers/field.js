ko.bindingHandlers.field = {
    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
        var pane = T.Utils.extractNode(bindingContext).pane,
            name = valueAccessor(),
            value = ko.observable(element.value);

        fields()[name] = value;
        ko.bindingHandlers.value.init(element, function () { return value; }, allBindingsAccessor, viewModel, bindingContext);

        // updateField();
        // ko.bindingHandlers.event.init(element, function () { return { change: updateField }; }, allBindingsAccessor, viewModel, bindingContext);
        //
        // function updateField() {
        //     fields()[name] = element.value;
        // }

        function fields() {
            if(!pane.model.fields)
                pane.model.fields = {};
            return pane.model.fields;
        }
    }
};
