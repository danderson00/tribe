(function () {
    var moduleFunction = module;
    module = function(name, lifecycle) {
        return moduleFunction('Tribe.Composite.' + name, lifecycle);
    };
    
Test={Unit:{},Integration:{},state:{}},Test.defaultOptions=function(){return{synchronous:!0,splitScripts:!0,handleExceptions:!1,basePath:"Integration/Panes/",loadStrategy:"adhoc",events:TC.defaultOptions().events,defaultUrlProvider:TC.options.defaultUrlProvider}},TC.options=Test.defaultOptions(),sinon.spy(ko,"applyBindings"),QUnit.testDone(function(){$(".__tribe").remove(),Test.state={},TC.options=Test.defaultOptions(),ko.applyBindings.reset()}),TC.history.dispose(),TC.context=function(n){return Test.Integration.context=$.extend({models:new TC.Types.Models,loader:new TC.Types.Loader,options:TC.options,templates:new TC.Types.Templates,loadedPanes:{},renderOperation:new TC.Types.Operation,pubsub:Test.Integration.pubsub()},n),Test.Integration.context},function(){var n=Test.Integration;n.executeEvents=function(n,t,i){TC.options.events=n,TC.options.basePath="Integration/Panes",$("#qunit-fixture").append("<div data-bind=\"pane: '"+t+"', data: '"+i+"'\"><\/div>"),ko.applyBindings()},n.executeDefaultEvents=function(t){n.executeEvents(TC.defaultOptions().events,t)},n.createTestElement=function(){$("#qunit-fixture").append('<div class="test"/>')},n.testEventsUntil=function(n){for(var i=[],r=TC.defaultOptions().events,t=0;t<r.length;t++)if(i.push(r[t]),r[t]===n)break;return TC.Events.spy=sinon.spy(),i.push("spy"),i}}(),Test.Integration.pubsubAsMock=function(){Test.Integration.pubsub=function(){var n={end:sinon.spy(),createLifetime:function(){return n}};return sinon.spy(n,"createLifetime"),n}},Test.Integration.pubsubAsTribe=function(){Test.Integration.pubsub=function(){return new Tribe.PubSub({sync:!0})}},Test.Integration.pubsubAsMock(),Test.Unit.context=function(){var n="",t={loader:{get:sinon.spy()},models:{test:{constructor:sinon.spy()}},options:{synchronous:!0,splitScripts:!0,basePath:"",events:["test"]},templates:{template:"",store:sinon.spy(),loaded:sinon.spy(),render:function(){$("#qunit-fixture").append(n)}},setTemplate:function(t){n=t},loadedPanes:{},rootNode:null,renderOperation:{promise:$.Deferred(),complete:function(){}}};return sinon.spy(t.templates,"render"),t},Test.Unit.node=function(){var n=Test.pane();return{pane:n,path:n.path,children:[],nodeForPath:function(){return this}}},Test.pane=function(){return{path:"test",element:"#qunit-fixture",model:{initialise:sinon.spy(),paneRendered:sinon.spy()},startRender:function(){},endRender:function(){},dispose:function(){}}}(function(){function n(n,t){var i=jQuery.Event(n);return i.which=t,i}module("Unit.Utilities.bindingHandlers"),test("enterPressed executes callback when enter keyup event occurs in specified element, passing element value",function(){var i=$("<input/>").appendTo("#qunit-fixture"),t=sinon.spy();ko.bindingHandlers.enterPressed.init(i[0],function(){return t}),ok(t.notCalled),i.val("value"),i.trigger(n("keyup",13)),ok(t.calledOnce),ok(t.calledWithExactly("value"))})})(),module("Unit.Utilities.collections"),test("each executes iterator for each item of array, passing value and index",function(){var n=sinon.spy();T.each(["1","2"],n),ok(n.calledTwice),equal(n.firstCall.args[0],"1"),equal(n.firstCall.args[1],0),equal(n.secondCall.args[0],"2"),equal(n.secondCall.args[1],1)}),test("each executes iterator for each property of object, passing value and property name",function(){var n=sinon.spy();T.each({test1:"1",test2:"2"},n),ok(n.calledTwice),equal(n.firstCall.args[0],"1"),equal(n.firstCall.args[1],"test1"),equal(n.secondCall.args[0],"2"),equal(n.secondCall.args[1],"test2")}),test("map executes iterator for each item of array, passing value and index",function(){var n=sinon.spy();T.map(["1","2"],n),ok(n.calledTwice),equal(n.firstCall.args[0],"1"),equal(n.firstCall.args[1],0),equal(n.secondCall.args[0],"2"),equal(n.secondCall.args[1],1)}),test("map executes iterator for each property of object, passing value and property name",function(){var n=sinon.spy();T.map({test1:"1",test2:"2"},n),ok(n.calledTwice),equal(n.firstCall.args[0],"1"),equal(n.firstCall.args[1],"test1"),equal(n.secondCall.args[0],"2"),equal(n.secondCall.args[1],"test2")}),test("map does not flatten arrays",function(){var n=T.map([1,2],function(){return[3,4]});equal(n.length,2),deepEqual(n[0],[3,4]),deepEqual(n[1],[3,4])}),test("map returns empty array for undefined input",function(){var n=sinon.spy();deepEqual(T.map(undefined,n),[]),ok(n.notCalled)}),test("filter executes once for each item of array",function(){var n=sinon.spy();T.filter(["1","2"],n),ok(n.calledTwice),equal(n.firstCall.args[0],"1"),equal(n.firstCall.args[1],0),equal(n.secondCall.args[0],"2"),equal(n.secondCall.args[1],1)}),test("filter executes once for each property of object",function(){var n=sinon.spy();T.filter({test1:"1",test2:"2"},n),ok(n.calledTwice),equal(n.firstCall.args[0],"1"),equal(n.firstCall.args[1],"test1"),equal(n.secondCall.args[0],"2"),equal(n.secondCall.args[1],"test2")}),test("filter returns array of values filtered by iterator function",function(){var n=T.filter(["1","2"],function(n){return n!=="1"});equal(n.length,1),equal(n[0],"2")}),test("filter returns empty array for undefined input",function(){var n=sinon.spy();deepEqual(T.filter(undefined,n),[]),ok(n.notCalled)}),test("pluck returns property value from each object in array",function(){var n=T.pluck([{one:"a",two:"b"},{one:"c",two:"d"},{one:"e",two:"f"}],"one");equal(n.length,3),equal(n.join(""),"ace")}),test("reduce executes reduceFunction with expected arguments",function(){var n=sinon.spy(),t=[1,2];T.reduce(t,"initial",n),equal(n.callCount,2),deepEqual(n.firstCall.args,["initial",1,0,t]),deepEqual(n.secondCall.args,[undefined,2,1,t])}),test("reduce returns expected result",function(){var n=T.reduce([1,2,3,4],10,function(n,t){return n+t});equal(n,20)}),module("Unit.Utilities.elementDestroyed"),test("promise resolves when element is removed using jQuery",function(){expect(1);var n=$("<div/>").appendTo("#qunit-fixture");$.when(TC.Utils.elementDestroyed(n)).done(function(){ok(!0)}),n.remove()}),asyncTest("promise resolves when element is removed using native functions",function(){expect(1);var n=$("<div/>").appendTo("#qunit-fixture");$.when(TC.Utils.elementDestroyed(n)).done(function(){ok(!0),start()}),n[0].parentNode.removeChild(n[0])}),function(){module("Unit.Utilities.idGenerator"),test("idGenerator starts at 0 and generates sequential numbers",function(){var n=TC.Utils.idGenerator();equal(n.next(),0),equal(n.next(),1),equal(n.next(),2),equal(n.next(),3),equal(n.next(),4)}),test("getUniqueId is a static generator",function(){equal(TC.Utils.getUniqueId(),0),equal(TC.Utils.getUniqueId(),1),equal(TC.Utils.getUniqueId(),2)})}(),function(){var n;module("Unit.Utilities.jquery.complete",{setup:function(){n=[$.Deferred(),$.Deferred()]}}),test("complete resolves when at least one deferred resolves",function(){var t=$.complete(n);equal(t.state(),"pending"),n[0].reject(),equal(t.state(),"pending"),n[1].resolve(),equal(t.state(),"resolved")}),test("complete rejects when all passed deferreds reject",function(){var t=$.complete(n);equal(t.state(),"pending"),n[0].reject(),equal(t.state(),"pending"),n[1].reject(),equal(t.state(),"rejected")})}(),function(){function n(){return TC.Events.spy.firstCall.args[0]}module("Unit.Utilities.nodes",{setup:function(){TC.Events.spy=sinon.spy(),TC.options.events=["spy"]}}),test("createNode executes events specified in options with new node",function(){TC.createNode("#qunit-fixture"),ok(TC.Events.spy.calledOnce),ok(n())}),test("appendNode appends wrapper to target element",function(){TC.appendNode("#qunit-fixture"),equal($("#qunit-fixture div").length,1)})}(),function(){var n=TC.Utils;module("Unit.Utilities.objects"),test("arguments.byConstructor",function(){var t=["",{},function(){},[],2.2];(function(){var i=n.arguments(arguments);equal(i.string,t[0]),equal(i.object,t[1]),equal(i.function,t[2]),equal(i.array,t[3]),equal(i.number,t[4])}).apply(null,t)}),test("removeItem removes matching item from array",function(){var t=[1,2,3];n.removeItem(t,2),deepEqual(t,[1,3])}),test("removeItem does not affect array if item does not exist",function(){var t=[1,2,3];n.removeItem(t,4),deepEqual(t,[1,2,3])}),test("inheritOptions",function(){var n={test1:"test",test2:2};equal(TC.Utils.inheritOptions(n,{},["test1"]).test1,"test"),equal(TC.Utils.inheritOptions(n,{},["test2"]).test2,2),equal(TC.Utils.inheritOptions(n,{},["test1","test2","test3"]).test3,undefined)}),test("evaluateProperty",function(){var t={test1:{test11:"test",test12:{test121:"test"}},test2:"test"};equal(n.evaluateProperty(t,""),t),equal(n.evaluateProperty(t,"test1"),t.test1),equal(n.evaluateProperty(t,"test2"),"test"),equal(n.evaluateProperty(t,"test1.test11"),"test"),equal(n.evaluateProperty(t,"test1.test12.test121"),"test"),equal(n.evaluateProperty(t,".test1"),t.test1),equal(n.evaluateProperty(t,"test1."),t.test1),equal(n.evaluateProperty(t,"test1..test11"),"test")})}(),function(){var n=TC.Utils;module("Unit.Utilities.panes"),test("getPaneOptions",function(){deepEqual(n.getPaneOptions("test"),{path:"test"},"accepts string value as path"),deepEqual(n.getPaneOptions("test",{data:"data"}),{path:"test",data:"data"},"accepts string value as path and merges other options"),deepEqual(n.getPaneOptions({path:"test"}),{path:"test"},"accepts options object"),deepEqual(n.getPaneOptions({path:"test"},{data:"data"}),{path:"test",data:"data"},"accepts options object and merges other options")})}(),function(){module("Unit.Utilities.Path"),test("Path handles empty arguments",function(){equal(TC.Path("").toString(),""),equal(TC.Path(undefined).toString(),""),equal(TC.Path(null).toString(),"")}),test("withoutFilename",function(){equal(TC.Path("/folder/subfolder/filename.ext").withoutFilename().toString(),"/folder/subfolder/","Path with slashes")}),test("filename",function(){equal(TC.Path("filename.ext").filename().toString(),"filename.ext","Filename"),equal(TC.Path("/filename.ext").filename().toString(),"filename.ext","Root path filename"),equal(TC.Path("/folder/subfolder/filename.ext").filename().toString(),"filename.ext","Path with slashes")}),test("extension",function(){equal(TC.Path("filename.ext").extension().toString(),"ext","Filename"),equal(TC.Path("/filename.ext").extension().toString(),"ext","Root path filename"),equal(TC.Path("filename").extension().toString(),"","Filename without extension"),equal(TC.Path("/filename").extension().toString(),"","Root path filename without extension"),equal(TC.Path("filename.").extension().toString(),"","Empty extension"),equal(TC.Path("/folder/subfolder/filename.ext").extension().toString(),"ext","Path with slashes")}),test("withoutExtension",function(){equal(TC.Path("filename.ext").withoutExtension().toString(),"filename"),equal(TC.Path("filename").withoutExtension().toString(),"filename"),equal(TC.Path("/test/filename.ext").withoutExtension().toString(),"/test/filename"),equal(TC.Path("/test/filename").withoutExtension().toString(),"/test/filename"),equal(TC.Path("/test/filename.ext").filename().withoutExtension().toString(),"filename"),equal(TC.Path("/test/filename").filename().withoutExtension().toString(),"filename")}),test("Path objects can be concatenated with strings",function(){equal(TC.Path("/folder/filename.ext").withoutFilename()+"new.ext","/folder/new.ext")}),test("isAbsolute",function(){ok(TC.Path("/test/").isAbsolute()),ok(TC.Path("http://test/").isAbsolute()),ok(!TC.Path("test/").isAbsolute()),ok(!TC.Path("test.txt").isAbsolute()),ok(!TC.Path("../test.txt").isAbsolute())}),test("makeAbsolute",function(){equal(TC.Path("/test").makeAbsolute().toString(),"/test"),equal(TC.Path("test").makeAbsolute().toString(),"/test"),equal(TC.Path("test.txt").makeAbsolute().toString(),"/test.txt"),equal(TC.Path("test/test.txt").makeAbsolute().toString(),"/test/test.txt")}),test("makeRelative",function(){equal(TC.Path("test").makeRelative().toString(),"test"),equal(TC.Path("/test").makeRelative().toString(),"test"),equal(TC.Path("/test.txt").makeRelative().toString(),"test.txt"),equal(TC.Path("/test/test.txt").makeRelative().toString(),"test/test.txt")}),test("normalise",function(){equal(TC.Path("test").toString(),"test"),equal(TC.Path("../test").toString(),"../test"),equal(TC.Path("test1/../test2").toString(),"test2"),equal(TC.Path("/test1/../test2").toString(),"/test2"),equal(TC.Path("/test1/../test2/../test3").toString(),"/test3"),equal(TC.Path("./test").toString(),"test"),equal(TC.Path("test1/./test2").toString(),"test1/test2"),equal(TC.Path(".././test1/../test2").toString(),"../test2"),equal(TC.Path("http://test//test.htm").toString(),"http://test/test.htm"),equal(TC.Path("http://test///test//test.htm").toString(),"http://test/test/test.htm"),equal(TC.Path("1///2//3/4/5").toString(),"1/2/3/4/5")}),test("asPathIdentifier",function(){equal(TC.Path("test.txt").asMarkupIdentifier().toString(),"test"),equal(TC.Path("test/test.txt").asMarkupIdentifier().toString(),"test-test")}),test("setExtension",function(){equal(TC.Path("/test/test").setExtension("js").toString(),"/test/test.js"),equal(TC.Path("/test/test.txt").setExtension("js").toString(),"/test/test.js")}),test("combine",function(){equal(TC.Path("/test/").combine("/test.txt").toString(),"/test/test.txt"),equal(TC.Path("http://test/").combine("/test.txt").toString(),"http://test/test.txt"),equal(TC.Path("/1/").combine("/2/").combine("/test.txt").toString(),"/1/2/test.txt"),equal(TC.Path("").combine("test.txt").toString(),"test.txt")})}(),function(){module("Unit.Utilities.querystring");var n=TC.Utils.Querystring;test("stringify handles flat objects",function(){equal(n.stringify({test:"t",test2:2}),"test=t&test2=2")}),test("stringify handles nested objects",function(){equal(decodeURI(n.stringify({test:{test2:"t"}})),"test[test2]=t"),equal(decodeURI(n.stringify({test:{test2:{test3:"t"}}})),"test[test2][test3]=t")}),test("stringify handles arrays",function(){equal(decodeURI(n.stringify({test:{test2:[{test3:"t"}]}})),"test[test2][][test3]=t")}),test("stringify handles arrays with arrayKey set to false",function(){equal(decodeURI(n.stringify({test:{test2:[{test3:"t"}]}},{arrayKey:!1})),"test[test2][test3]=t")}),test("stringify raises if source contains cyclic references",function(){raises(function(){var t={},i={test1:t};t.test2=i,n.stringify(t)})}),test("parse handles flat objects",function(){deepEqual(n.parse("test=t&test2=2"),{test:"t",test2:2})}),test("parse strips leading question mark",function(){deepEqual(n.parse("?test=t&test2=2"),{test:"t",test2:2})}),test("parse handles nested objects",function(){deepEqual(n.parse("test[test2]=t"),{test:{test2:"t"}}),deepEqual(n.parse("test[test2][test3]=t"),{test:{test2:{test3:"t"}}})}),test("parse handles arrays",function(){deepEqual(n.parse("test[test2][][test3]=t"),{test:{test2:[{test3:"t"}]}})})}(),function(){function r(){return{pushState:sinon.spy(),go:sinon.spy(),replaceState:sinon.spy()}}function i(){var n=document.createEvent("Event");n.initEvent("popstate",!0,!1),n.state=1,window.dispatchEvent(n)}var n,t;module("Unit.Types.History",{setup:function(){t=r(),n=new TC.Types.History(t)},teardown:function(){n.dispose()}}),test("browser.go is raised when popstate event is raised normally",function(){function n(n){equal(n.data.count,1)}expect(1),document.addEventListener("browser.go",n),i(),document.removeEventListener("browser.go",n)}),test("browser.go is not raised when update is called and popstate is raised",function(){function t(n){equal(n.data.count,1)}expect(0),document.addEventListener("browser.go",t),n.update(1),i(),document.removeEventListener("browser.go",t)}),test("window.history.go is called when go is called",function(){n.go(1),ok(t.go.calledOnce)}),test("window.history.pushState is called when navigate is called",function(){n.navigate(),ok(t.pushState.calledOnce)}),test("window.history.pushState is called with url and title if urlProvider is passed",function(){n.navigate({url:"url1",title:"title1"}),equal(t.pushState.firstCall.args[1],"title1"),equal(t.pushState.firstCall.args[2],"url1")})}(),function(){var n,t;module("Unit.Types.Loader",{setup:function(){t=Test.Unit.context(),n=new TC.Types.Loader}}),test("get should call handler for file extension from passed url",function(){var t=sinon.spy();TC.LoadHandlers.test=t,n.get("test.test"),ok(t.calledOnce)}),test("get should call handler with url, resourcePath and context",function(){var i=sinon.spy();TC.LoadHandlers.test=i,n.get("test.test","test/test",t),ok(i.calledOnce),equal(i.firstCall.args[0],"test.test"),equal(i.firstCall.args[1],"test/test"),equal(i.firstCall.args[2],t)}),test("when passed the same url, get should return the same deferred from first call to handler",function(){var t=$.Deferred();TC.LoadHandlers.test=sinon.stub().returns(t),equal(n.get("test.test"),t),equal(n.get("test.test"),t)}),test("get should return null after deferred from first call to handler completes",function(){var t=$.Deferred();TC.LoadHandlers.test=sinon.stub().returns(t),equal(n.get("test.test"),t),t.resolve(),equal(n.get("test.test"),null)}),test("get should return null after deferred from first call to handler fails",function(){var t=$.Deferred();TC.LoadHandlers.test=sinon.stub().returns(t),equal(n.get("test.test"),t),t.reject(),equal(n.get("test.test"),null)}),test("get should return different deferred for each unique url",function(){TC.LoadHandlers.test=function(){return $.Deferred()};var t=n.get("test1.test"),i=n.get("test2.test");notEqual(t,i)})}(),function(){var n;module("Unit.Types.Logger",{setup:function(){TC.Loggers.test=sinon.spy(),n=new TC.Types.Logger,n.setLogger("test")}}),test("logger is called with level and message",function(){n.warn("test"),ok(TC.Loggers.test.calledOnce),ok(TC.Loggers.test.calledWithExactly("warn","test"))}),test("default log level logs everything",function(){n.debug(),n.info(),n.warn(),n.error(),equal(TC.Loggers.test.callCount,4)}),test("only levels equal or higher than the set value are logged",function(){n.setLogLevel("warn"),n.debug(),n.info(),ok(TC.Loggers.test.notCalled),n.warn(),n.error(),ok(TC.Loggers.test.calledTwice)})}(),function(){var n;module("Unit.Types.Models",{setup:function(){n=new TC.Types.Models}}),test("register stores model as property with constructor and options",function(){var t=function(){},i={};n.register("test",t,i),equal(n.test.constructor,t),equal(n.test.options,i)})}(),function(){function i(n){return{id:1,pane:{path:n},transitionTo:sinon.spy()}}var n,t;module("Unit.Types.Navigation",{setup:function(){t=i("test"),n=new TC.Types.Navigation(t,{transition:"fade"}),TC.history={navigate:sinon.spy(),update:sinon.spy()}},teardown:function(){n.dispose()}}),test("forward transitions to specified pane",function(){var i={path:"test2"};n.navigate(i),equal(t.transitionTo.firstCall.args[0],i),equal(t.transitionTo.firstCall.args[1],"fade")}),test("forward accepts string transition as options",function(){n=new TC.Types.Navigation(t,"fade");var i={path:"test2"};n.navigate(i),equal(t.transitionTo.firstCall.args[0],i),equal(t.transitionTo.firstCall.args[1],"fade")}),test("back returns to initial pane with reverse transition",function(){n.navigate({path:"test2"}),n.go(-1),equal(t.transitionTo.secondCall.args[0].path,"test"),equal(t.transitionTo.secondCall.args[2],!0)}),test("back returns to previous pane",function(){n.navigate({path:"test2"}),n.navigate({path:"test3"}),n.go(-1),equal(t.transitionTo.lastCall.args[0].path,"test2")}),test("back does nothing if no stack",function(){n.go(-1),ok(t.transitionTo.notCalled)}),test("forward does nothing if no stack",function(){n.go(1),ok(t.transitionTo.notCalled)}),test("back two returns to initial pane",function(){n.navigate({path:"test2"}),n.navigate({path:"test3"}),n.go(-2),equal(t.transitionTo.lastCall.args[0].path,"test")}),test("forward moves stack forward if stack exists",function(){n.navigate({path:"test2"}),n.navigate({path:"test3"}),n.go(-2),n.go(1),equal(t.transitionTo.lastCall.args[0].path,"test2")}),test("document navigating event is raised when navigating",function(){function t(n){equal(n.data.options.path,"test2")}expect(1),document.addEventListener("navigating",t),n.navigate({path:"test2"}),document.removeEventListener("navigating",t)}),test("TC.history.navigate is called on navigate when browser option is set",function(){n=new TC.Types.Navigation(t,{browser:!0}),n.navigate({path:"test2"}),ok(TC.history.navigate.calledOnce)}),test("TC.history.update is called on go when browser option is set",function(){n=new TC.Types.Navigation(t,{browser:!0}),n.navigate({path:"test2"}),n.go(-1),ok(TC.history.update.calledOnce)}),test("node transitions when browser.go event is received",function(){n=new TC.Types.Navigation(t,{browser:!0}),n.navigate({path:"test2"}),TC.Utils.raiseDocumentEvent("browser.go",{count:-1}),equal(t.transitionTo.secondCall.args[0].path,"test")}),test("initial state is set from urlProvider if paneOptionsFrom returns paneOptions object",function(){var i={paneOptionsFrom:function(){return{path:"test",data:{test:"test"}}}};n=new TC.Types.Navigation(t,{browser:i}),deepEqual(n.stack[0],i.paneOptionsFrom())}),test("initial state is not set from urlProvider if paneOptionsFrom returns null",function(){var i={paneOptionsFrom:function(){return null}};n=new TC.Types.Navigation(t,{browser:i}),deepEqual(n.stack[0].path,"test")}),test("history url and title are set from urlProvider when navigating",function(){var i={paneOptionsFrom:function(){return null},urlDataFrom:function(){return{url:"test",title:"test"}}};n=new TC.Types.Navigation(t,{browser:i}),n.navigate({path:"test2"}),deepEqual(TC.history.navigate.firstCall.args[0],i.urlDataFrom())}),Test.urlProvider={urlDataFrom:function(){return{url:"test",title:"test"}},paneOptionsFrom:function(){return{path:"test",data:{test:"test"}}}}}(),function(){function t(n,t){return new TC.Types.Pane({path:n,handlesNavigation:t})}function n(n){var i=new TC.Types.Node(null,t("root",n==="root")),r=new TC.Types.Node(i,t("middle",n==="middle"));return new TC.Types.Node(r,t("leaf",n==="leaf"))}module("Unit.Types.Node"),test("node creates Navigation if handlesNavigation is set on pane",function(){var n=new TC.Types.Node(null,t("test",!0));ok(n.navigation)}),test("findNavigation returns Navigation for root node if no pane handles navigation",function(){var t=n();equal(t.findNavigation().node,t.root),equal(t.parent.findNavigation().node,t.root),equal(t.root.findNavigation().node,t.root)}),test("findNavigation returns Navigation for root node if specified",function(){var t=n("root");equal(t.findNavigation().node,t.root),equal(t.parent.findNavigation().node,t.root),equal(t.root.findNavigation().node,t.root)}),test("findNavigation returns Navigation for middle node if specified",function(){var t=n("middle");equal(t.findNavigation().node,t.parent),equal(t.parent.findNavigation().node,t.parent),equal(t.root.findNavigation().node,t.parent)}),test("findNavigation returns Navigation for leaf node if specified",function(){var t=n("leaf");equal(t.findNavigation().node,t),equal(t.parent.findNavigation().node,t),equal(t.root.findNavigation().node,t)}),test("findNavigation returns Navigation for root node if handling node disposed",function(){var t=n("leaf"),i=t.parent;t.dispose(),equal(i.findNavigation().node,i.root),equal(t.parent.findNavigation().node,i.root)})}(),function(){function n(n,t){return new TC.Types.Pane({path:n,handlesNavigation:t})}module("Unit.Types.Node"),test("setPane makes path absolute and sets pane path from pane if no parent",function(){var t=new TC.Types.Node(null,n("test"));equal(t.pane.path,"/test")}),test("setPane sets pane path from parent and relative pane path",function(){var t=new TC.Types.Node(null,n("/path/parent")),i=new TC.Types.Node(t,n("child"));equal(i.pane.path,"/path/child")}),test("setPane sets pane path from pane if path is absolute",function(){var t=new TC.Types.Node(null,n("/path/parent")),i=new TC.Types.Node(t,n("/root"));equal(i.pane.path,"/root")}),test("setPane unsets node on existing pane",function(){var t=n("test"),i=new TC.Types.Node(null,t);i.setPane(new TC.Types.Pane(n("test2"))),equal(t.node,null)}),test("setPane sets node.navigation when pane.handlesNavigation",function(){var t=new TC.Types.Node;t.setPane(n("","test")),ok(t.navigation.constructor,TC.Types.Navigation)}),test("node root is set correctly",function(){var t=new TC.Types.Node(null,n("one")),i=new TC.Types.Node(t,n("two")),r=new TC.Types.Node(i,n("three"));equal(t.root,t),equal(i.root,t),equal(r.root,t)}),test("dispose removes node from parent collection",function(){var t=new TC.Types.Node(null,n("parent")),i=new TC.Types.Node(t,n("child"));equal(t.children.length,1),i.dispose(),equal(t.children.length,0)}),test("navigate inherits path from existing pane",function(){var t=new TC.Types.Node(null,n("/path/node1"));t.transitionTo=sinon.spy(),t.navigate("node2"),ok(t.transitionTo.calledOnce),equal(t.transitionTo.firstCall.args[0].path,"/path/node2")}),test("nodeForPath returns current node if skipPath is not specified",function(){var i=new TC.Types.Node(null,n("/path1/node1")),t=new TC.Types.Node(i,n("/path2/node2"));equal(t.nodeForPath(),t)}),test("nodeForPath returns parent if skipPath is specified",function(){var t=new TC.Types.Node(null,n("/path1/node1")),i=new TC.Types.Node(t,n("/path2/node2"));i.skipPath=!0,equal(i.nodeForPath(),t)}),test("nodeForPath recurses, skipping nodes as specified",function(){var t=new TC.Types.Node(null,n("/path1/node1")),i=new TC.Types.Node(t,n("/path2/node2")),r=new TC.Types.Node(i,n("/path2/node2"));i.skipPath=!0,r.skipPath=!0,equal(r.nodeForPath(),t)})}(),function(){var n;module("Unit.Types.Operation",{setup:function(){n=new TC.Types.Operation}}),test("operation resolves when single child completes",function(){n.add(1),equal(n.promise.state(),"pending"),n.complete(1),equal(n.promise.state(),"resolved")}),test("operation resolves when two children complete",function(){n.add(1),n.add(2),n.complete(1),equal(n.promise.state(),"pending"),n.complete(2),equal(n.promise.state(),"resolved")})}(),function(){function n(n){return{nodeForPath:function(){return{pane:n}}}}module("Unit.Types.Pane"),test("inheritPathFrom inherits path if pane path is relative",function(){var t=new TC.Types.Pane({path:"pane2"});t.inheritPathFrom(n({path:"/Test/pane1"})),equal(t.path,"/Test/pane2")}),test("inheritPathFrom doesn't inherit path if pane path is absolute",function(){var t=new TC.Types.Pane({path:"/pane2"});t.inheritPathFrom(n({path:"/Test/pane1"})),equal(t.path,"/pane2")}),test("inheritPathFrom sets child folders from relative pane path",function(){var t=new TC.Types.Pane({path:"Test2/pane2"});t.inheritPathFrom(n({path:"/Test/pane1"})),equal(t.path,"/Test/Test2/pane2")})}(),function(){function u(){return i=$.Deferred(),{null1:sinon.spy(),null2:sinon.spy(),deferred:sinon.stub().returns(i)}}var n,t,i,r={};module("Unit.Types.Pipeline",{setup:function(){n=u(),t=new TC.Types.Pipeline(n,r)}}),test("event handlers specified are called",function(){t.execute(["null1"]),ok(n.null1.calledOnce)}),test("event handlers are passed target and context",function(){var i={};t.execute(["null1"],i),ok(n.null1.calledWithExactly(i,r))}),test("events returning null are executed synchronously",function(){t.execute(["null1","null2"]),ok(n.null1.calledOnce),ok(n.null2.calledOnce)}),test("events are executed when previous event resolves",function(){t.execute(["deferred","null1"]),ok(n.null1.notCalled),i.resolve(),ok(n.null1.calledOnce)}),test("rejected events terminate pipeline execution",function(){t.execute(["deferred","null1"]),i.reject(),ok(n.null1.notCalled)}),test("execute returns deferred that resolves on completion",function(){var n=t.execute(["deferred"]);equal(n.state(),"pending"),i.resolve(),equal(n.state(),"resolved")}),test("execute returns deferred that rejects on failure",function(){var n=t.execute(["deferred"]);equal(n.state(),"pending"),i.reject(),equal(n.state(),"rejected")})}(),function(){var t,i,n;module("Unit.Types.Saga",{setup:function(){i=new Tribe.PubSub({sync:!0}),t={pubsub:i},n=sinon.spy()}}),test("handler is executed with correct arguments when topic is published",function(){var r=new TC.Types.Saga(t,{testTopic:n}).start();i.publish("testTopic","data"),ok(n.calledOnce),equal(n.firstCall.args[0],r),equal(n.firstCall.args[1],"data"),equal(n.firstCall.args[2].data,"data")}),test("onstart handler is executed when saga is started",function(){var i=new TC.Types.Saga(t,{onstart:n},"test");ok(n.notCalled),i.start(),ok(n.calledOnce),equal(n.firstCall.args[0],i),equal(n.firstCall.args[1],"test")}),test("onend handler is executed when saga is started",function(){var i=new TC.Types.Saga(t,{onend:n}).start();ok(n.notCalled),i.end(),ok(n.calledOnce),equal(n.firstCall.args[0],i)}),test("onstart and onend handlers are not executed when topics is published",function(){var r=new TC.Types.Saga(t,{onstart:n,onend:n}).start();i.publish("onstart"),i.publish("onend"),ok(n.calledOnce)}),test("startChild starts child and adds to children",function(){var n={onstart:sinon.spy()},i=new TC.Types.Saga(t);i.startChild(n),ok(n.onstart.calledOnce),equal(i.children.length,1)}),test("end calls end on any children",function(){var n={onend:sinon.spy()},i=new TC.Types.Saga(t);i.startChild(n),i.end(),ok(n.onend.calledOnce)})}(),function(){var n;module("Unit.Types.Templates",{setup:function(){n=new TC.Types.Templates},teardown:function(){$('head script[type="text/template"]').remove()}}),test("store wraps template in script tag with resource path as id",function(){n.store("<br/>","test"),equal($("head script#template-test").text(),"<br/>")}),test("store appends multiple wrapped templates",function(){n.store('<script type="text/template" id="test1">test1<\/script><script type="text/template" id="test2">test2<\/script>'),equal($("head script#test1").text(),"test1"),equal($("head script#test2").text(),"test2")}),test("store ignores unwrapped templates",function(){n.store('<script type="text/template" id="test1">test1<\/script>blah<br/><script type="text/template" id="test2">test2<\/script>'),equal($("head script#test1").text(),"test1"),equal($("head script#test2").text(),"test2")}),test("render replaces content of target with stored template",function(){$("#qunit-fixture").text("previous"),n.store("content","test"),n.render("#qunit-fixture","test"),equal($("#qunit-fixture").text(),"content")}),test("loaded returns true if template has been loaded for specified path",function(){n.store("<br/>","test"),ok(n.loaded("test"))})}(),function(){var u=$.globalEval,t="test.js",i="/test",n="",r;$.mockjax({url:t,response:function(){this.responseText=n}}),module("Unit.LoadHandlers.scripts",{setup:function(){r=Test.Unit.context()},teardown:function(){$.globalEval=u}}),test("script handler returns promise object",function(){ok(TC.LoadHandlers.js(t,i,r).promise)}),test("script handler executes globalEval with response",function(){$.globalEval=sinon.spy(),n="test",TC.LoadHandlers.js(t,i,r),ok($.globalEval.calledOnce),equal($.globalEval.firstCall.args[0].substring(0,n.length),n)}),test("script handler appends sourceURL tag",function(){$.globalEval=sinon.spy(),n="test",TC.LoadHandlers.js(t,i,r),ok($.globalEval.calledOnce),equal($.globalEval.firstCall.args[0].substring(n.length+1),"//@ sourceURL=test.js")}),test("script handler splits scripts on sourceURL tag if option is set",function(){$.globalEval=sinon.spy(),n="test\n//@ sourceURL=test.js\ntest2\n//@ sourceURL=test2.js",TC.LoadHandlers.js(t,i,r),ok($.globalEval.calledTwice),equal($.globalEval.firstCall.args[0].substring(0,4),"test"),equal($.globalEval.secondCall.args[0].substring(1,6),"test2")}),test("script handler sets TC.scriptEnvironment before executing scripts",function(){expect(1),n="equal(TC.scriptEnvironment.resourcePath, '"+i+"');",TC.LoadHandlers.js(t,i,r)}),test("script handler clears TC.scriptEnvironment after executing scripts",function(){TC.LoadHandlers.js(t,i,r),equal(TC.scriptEnvironment,undefined)})}(),function(){var t="test.css",i="/test",n="";$.mockjax({url:t,response:function(){this.responseText=n}}),module("Unit.LoadHandlers.stylesheets"),test("stylesheet handler returns promise object",function(){ok(TC.LoadHandlers.css(t,i,Test.Unit.context()).promise)}),test("stylesheet handler adds stylesheet to page header",function(){n="body{}",TC.LoadHandlers.css(t,i,Test.Unit.context()),equal($("head style").last().text(),n)}),test("stylesheet is added with id of resource",function(){n="body{}",TC.LoadHandlers.css(t,i,Test.Unit.context()),equal($("head style#style--test").last().text(),n)})}(),function(){var t="test.htm",i="/test",r="<br/>",n;$.mockjax({url:t,response:function(){this.responseText=r}}),module("Unit.LoadHandlers.templates",{setup:function(){n=Test.Unit.context()}}),test("template handler returns promise object",function(){ok(TC.LoadHandlers.htm(t,i,n).promise)}),test("template is stored with resource path identifier",function(){TC.LoadHandlers.htm(t,i,n),ok(n.templates.store.calledOnce),ok(n.templates.store.calledWithExactly("<br/>","/test"))})}(),function(){var n;module("Unit.LoadStrategies.adhoc",{setup:function(){n=Test.Unit.context()}}),test("loader.get is called for each resource",function(){TC.LoadStrategies.adhoc({path:"new"},n),ok(n.loader.get.calledThrice),ok(n.loader.get.firstCall.calledWithExactly("new.js","new",n)),ok(n.loader.get.secondCall.calledWithExactly("new.htm","new",n)),ok(n.loader.get.thirdCall.calledWithExactly("new.css","new",n))}),test("loader.get is called with base path combined with pane path",function(){n=Test.Unit.context(),n.options.basePath="panes",TC.LoadStrategies.adhoc({path:"test2"},n),ok(n.loader.get.firstCall.calledWithExactly("panes/test2.js","test2",n))}),test("subsequent calls with the same path returns the same deferred object",function(){var r=$.Deferred(),t,i;n.loader.get=function(){return r},t=TC.LoadStrategies.adhoc({path:"test"},n),i=TC.LoadStrategies.adhoc({path:"test"},n),equal(t,i)}),test("subsequent calls with the same path returns null after the deferred has been resolved",function(){var t=$.Deferred();n.loader.get=function(){return t},TC.LoadStrategies.adhoc({path:"test"},n),t.resolve(),equal(TC.LoadStrategies.adhoc({path:"test"},n),null)}),test("subsequent calls with the same path returns null after the deferred has been rejected",function(){var t=$.Deferred();n.loader.get=function(){return t},TC.LoadStrategies.adhoc({path:"test"},n),t.reject(),equal(TC.LoadStrategies.adhoc({path:"test"},n),null)}),test("loader.get is not called when model has been loaded",function(){TC.LoadStrategies.adhoc({path:"test"},n),ok(n.loader.get.notCalled)}),test("loader.get is not called when template has been loaded",function(){n.templates.loaded=function(){return!0},TC.LoadStrategies.adhoc({path:"new"},n),ok(n.loader.get.notCalled)})}(),module("Unit.LoadStrategies.preloaded"),test("returns rejected promise if no resources have been loaded for the specified path",function(){var n=Test.Unit.context(),t=TC.LoadStrategies.preloaded({path:"test2"},n);equal(t.state(),"rejected")}),function(){var n;module("Unit.Events.createModel",{setup:function(){n=Test.Unit.context(),pane=Test.Unit.node().pane}}),test("model is created from stored constructor",function(){TC.Events.createModel(pane,n),ok(n.models.test.constructor.calledOnce)}),test("default model is created if no constructor defined",function(){n.models.test.constructor=null,TC.Events.createModel(pane,n),equal(pane.model.pane,pane)})}(),function(){var n,t;module("Unit.Events.renderComplete",{setup:function(){n=new TC.Types.Pane({element:"#qunit-fixture",transition:"test"}),n.model={renderComplete:sinon.spy()},t=Test.Unit.context(),TC.Transitions.test={"in":sinon.spy()}}}),test("renderComplete calls transition.in with pane element",function(){TC.Events.renderComplete(n,t),ok(TC.Transitions.test.in.calledOnce),equal(TC.Transitions.test.in.firstCall.args[0],n.element)}),test("renderComplete calls renderComplete on pane model",function(){TC.Events.renderComplete(n,t),ok(n.model.renderComplete.calledOnce)}),test("renderComplete resolves is.rendered on pane model",function(){equal(n.is.rendered.state(),"pending"),TC.Events.renderComplete(n,t),equal(n.is.rendered.state(),"resolved")}),test("renderComplete raises renderComplete event on document, passing pane as data",function(){var i=sinon.spy();window.document.addEventListener("renderComplete",i),TC.Events.renderComplete(n,t),ok(i.calledOnce),equal(i.firstCall.args[0].data,n),window.document.removeEventListener("renderComplete",i)})}(),function(){var n;module("Unit.Events.renderPane",{setup:function(){n=Test.Unit.context(),pane=Test.Unit.node().pane,n.setTemplate("<div/>")}}),test("templates.render is called with identifier and element",function(){TC.Events.renderPane(pane,n),ok(n.templates.render.calledOnce),ok(n.templates.render.calledWithExactly(pane.element,"test"))}),test("bindings are applied to child elements of pane element",function(){TC.Events.renderPane(pane,n),ok(ko.applyBindings.calledOnce),ok(ko.applyBindings.calledWithExactly(pane.model,$("#qunit-fixture").children()[0]))}),test("paneRendered function is called on the model",function(){TC.Events.renderPane(pane,n),ok(pane.model.paneRendered.calledOnce)})}(),function(){var n,t;module("Unit.transition",{setup:function(){Test.Integration.createTestElement(),TC.Transitions.test={"in":sinon.spy(),out:sinon.spy(),reverse:"test2"},TC.Transitions.test2={"in":sinon.spy(),out:sinon.spy(),reverse:"test"},n=new TC.Types.Pane({transition:"test",element:".test"}),t=new TC.Types.Node(null,n)}}),test("transition executes specified in transition against given element",function(){TC.transition(".test","test").in(),equal(TC.Transitions.test.in.firstCall.args[0],".test")}),test("transition executes specified out transition against given element",function(){TC.transition(".test","test").out(),equal(TC.Transitions.test.out.firstCall.args[0],".test")}),test("transition gets target element and transition from node",function(){TC.transition(t).in(),equal(TC.Transitions.test.in.firstCall.args[0],".test")}),test("transition gets target element and transition from pane",function(){TC.transition(n).in(),equal(TC.Transitions.test.in.firstCall.args[0],".test")}),test("specifying transition as argument overrides pane transition",function(){TC.Transitions.test2={"in":sinon.spy(),out:sinon.spy()},TC.transition(n,"test2").in(),ok(TC.Transitions.test.in.notCalled),ok(TC.Transitions.test2.in.calledOnce)}),test("transitioning out removes element by default",function(){TC.transition(".test").out(),equal($(".test").length,0)}),test("transitioning out hides element if specified",function(){TC.transition(".test").out(!1),equal($(".test").length,1)}),test("reverse transition is executed when specified",function(){TC.transition(".test","test",!0).in(),equal(TC.Transitions.test2.in.firstCall.args[0],".test")})}(),function(){module("Integration.api"),test("arguments can be passed to registerModel in any order",function(){var i="path",n={},t=function(){};TC.registerModel(i,n,t),equal(Test.Integration.context.models.path.options,n),equal(Test.Integration.context.models.path.constructor,t),TC.registerModel(n,t,i),equal(Test.Integration.context.models.path.options,n),equal(Test.Integration.context.models.path.constructor,t)}),test("registerModel takes path from TC.scriptEnvironment",function(){var n=function(){};TC.scriptEnvironment={resourcePath:"test"},TC.registerModel(n),equal(Test.Integration.context.models.test.constructor,n)})}(),function(){function t(n){return n=n||{},ko.bindingHandlers.pane.init(n.element,i(n.value||""),i(n.otherValues||{}),n.viewModel,n.bindingContext||{})}function i(n){return function(){return n}}function n(){return TC.Events.spy.firstCall.args[0]}module("Integration.bindingHandler",{setup:function(){TC.Events.spy=sinon.spy(),TC.options.events=["spy"]}}),test("pane path is set from string binding value",function(){t({value:"test"}),equal(n().path,"/test")}),test("pane properties are set from object binding value",function(){t({value:{path:"test",data:"test2"}}),equal(n().path,"/test"),equal(n().data,"test2")}),test("pane data is set from other binding value",function(){t({otherValues:{data:"data"}}),equal(n().data,"data")}),test("pane element is set from element argument",function(){t({element:"#qunit-fixture"}),equal(n().element,$("#qunit-fixture")[0])}),test("parent node is extracted from bindingContext",function(){var i=Test.Unit.node();t({bindingContext:{$root:{__node:i}}}),equal(n().node.parent,i)})}(),module("Integration.Navigate",{setup:Test.Integration.createTestElement}),test("navigating child pane transitions node marked with handlesNavigation",function(){TC.createNode(".test",{path:"Navigate/layout"}),TC.nodeFor(".child1").navigate("content2"),equal($(".child2").length,1),equal($(".content1").length,0)}),test("navigating root pane transitions node marked with handlesNavigation",function(){TC.createNode(".test",{path:"Navigate/layout"}),TC.nodeFor(".layout").navigate("content2"),equal($(".layout").length,1),equal($(".child2").length,1),equal($(".content1").length,0)}),test("navigating back returns to previous pane",function(){TC.createNode(".test",{path:"Navigate/layout"});var n=TC.nodeFor(".layout");n.navigate("content2"),equal($(".content1").length,0),n.navigateBack(),equal($(".content1").length,1)}),function(){module("Integration.nodes"),test("createNode binds pane to target element",function(){TC.createNode("#qunit-fixture",{path:"Utilities/parent"}),equal($("#qunit-fixture .parent .child .message").text(),"test message")}),test("appendNode appends wrapped pane to target element",function(){TC.appendNode("#qunit-fixture",{path:"Utilities/parent"}),equal($("#qunit-fixture div .parent .child .message").text(),"test message")}),test("createNode called from paneRendered model function renders",function(){TC.createNode("#qunit-fixture",{path:"Utilities/dynamicParent"}),equal($("#qunit-fixture .dynamicParent .child .message").text(),"test message")}),test("createNode inherits context from parent element",function(){TC.Events.spy=sinon.spy(),TC.options.events=["loadResources","createModel","initialiseModel","renderPane","renderComplete","spy","active","dispose"],TC.createNode("#qunit-fixture",{path:"Utilities/dynamicParent"}),ok(TC.Events.spy.calledTwice),equal(TC.Events.spy.firstCall.args[1],TC.Events.spy.secondCall.args[1])}),test("createNode returns populated Node object",function(){var n=TC.createNode("#qunit-fixture",{path:"Utilities/parent"});equal(n.pane.path,"/Utilities/parent"),equal(n.children.length,1)}),asyncTest("context.renderOperation resolves when render operation is complete",function(){expect(1),TC.options.synchronous=!1;var n=TC.context();TC.createNode("#qunit-fixture",{path:"Utilities/parent"},null,n),$.when(n.renderOperation.promise).done(function(){equal($("#qunit-fixture .parent .child .message").text(),"test message"),start()})}),asyncTest("context.renderOperation includes dynamically added nodes",function(){expect(1),TC.options.synchronous=!1;var n=TC.context();TC.createNode("#qunit-fixture",{path:"Utilities/dynamicParent"},null,n),$.when(n.renderOperation.promise).done(function(){equal($("#qunit-fixture .dynamicParent .child .message").text(),"test message"),start()})})}(),module("Integration.Paths",{setup:Test.Integration.createTestElement}),test("panes created with skipPath true inherit pane path from their parent",function(){TC.createNode(".test",{path:"Paths/Subfolder/parent"}),equal($(".parent").length,1),equal($(".parent").children().length,1),equal($(".parent .child").length,1)}),module("Integration.PubSub",{setup:function(){Test.Integration.pubsubAsTribe(),Test.Integration.createTestElement()}}),test("subscription in pane is executed",function(){TC.createNode(".test",{path:"PubSub/subscriber"}),Test.Integration.context.pubsub.publish("test","message"),equal($(".subscriber").text(),"message")}),test("subscription is removed when pane is removed from DOM",function(){TC.createNode(".test",{path:"PubSub/subscriber"}),equal(Test.Integration.context.pubsub.subscribers.get("test").length,1),$(".test").remove(),equal(Test.Integration.context.pubsub.subscribers.get("test").length,0)}),function(){module("Integration.Transition",{setup:Test.Integration.createTestElement}),test("transitioning node replaces pane with specified pane",function(){TC.createNode(".test",{path:"Transition/pane1"}),equal($(".pane1").length,1),TC.transition(TC.nodeFor(".pane1")).to("Transition/pane2"),equal($(".pane1").length,0),equal($(".pane2").length,1)}),test("transitioning element replaces pane with specified pane",function(){TC.createNode(".test",{path:"Transition/pane1"}),equal($(".pane1").length,1),TC.transition(".test").to("Transition/pane2"),equal($(".pane1").length,0),equal($(".pane2").length,1)}),test("specifying reverseTransitionIn pane option applies reverse transition",function(){TC.createNode(".test",{path:"Transition/pane1",transition:"slideLeft",reverseTransitionIn:!0}),ok($(".pane1").parent().hasClass("slideRight"))}),test("specifying reverse argument applies reverse transition",function(){TC.createNode(".test",{path:"Transition/pane1",transition:"slideLeft",reverseTransitionIn:!0}),TC.transition(TC.nodeFor(".pane1"),null,!0).to("Transition/pane2"),ok($(".pane1").parent().hasClass("slideRight")),ok($(".pane2").parent().hasClass("slideRight"))}),asyncTest("async transition to replaces pane with specified pane",function(){TC.options.synchronous=!1;var n=TC.context();TC.createNode(".test",{path:"Transition/pane1"},null,n),$.when(n.renderOperation.promise).done(function(){equal($(".pane1").length,1),$.when(TC.transition(".test").to("Transition/pane2")).done(function(){equal($(".pane1").length,0),equal($(".pane2").length,1),start()})})})}(),function(){var n;module("Integration.Tree",{setup:function(){Test.Integration.executeDefaultEvents("Tree/1"),n=Test.state.pane.node.root}}),test("tree renders",function(){equal($(".111").length,1)}),test("node is created and attached to pane",function(){ok(Test.state.pane.node),equal(Test.state.pane.path,"/Tree/1")}),test("node is part of full node tree",function(){equal(n.children.length,1),equal(n.children[0].children.length,2),equal(n.children[0].children[1].pane.path,"/Tree/112")}),test("node is removed from tree when pane element is remove from DOM",function(){equal(n.children[0].children.length,2),$(".111").parent().remove(),equal(n.children[0].children.length,1)}),test("pane changes when node is transitioned",function(){TC.transition(TC.nodeFor(".11")).to("12"),equal(n.children[0].pane.path,"/Tree/12")}),test("child nodes are removed when transitioned",function(){TC.transition(TC.nodeFor(".11")).to("12"),equal(n.children[0].children.length,0)}),test("node is not replaced when transitioned",function(){var t=n.children[0];TC.transition(TC.nodeFor(".11")).to("12"),equal(n.children[0],t)}),test("node is replaced when element is transitioned",function(){var t=n.children[0];TC.transition($(".11").parent()).to("/Tree/12"),equal(n.children.length,1),notEqual(n.children[0],t),equal(n.children[0].pane.path,"/Tree/12")})}(),function(){module("Integration.Events.active",{setup:function(){TC.Events.spy=sinon.spy()}});var n=Test.Integration.testEventsUntil("active");test("event ends when pane element is removed from DOM",function(){Test.Integration.executeEvents(n,"Events/basic"),ok(TC.Events.spy.notCalled),$(".basic").parent().remove(),ok(TC.Events.spy.called),equal(TC.Events.spy.firstCall.args[0].path,"/Events/basic")}),test("child events end when parent pane element is removed from DOM",function(){Test.Integration.executeEvents(n,"Events/basicParent"),ok(TC.Events.spy.notCalled),$(".basicContainer").parent().remove(),ok(TC.Events.spy.calledTwice),equal(TC.Events.spy.firstCall.args[0].path,"/Events/basicParent"),equal(TC.Events.spy.secondCall.args[0].path,"/Events/basic")})}(),function(){module("Integration.Events.createModel",{setup:function(){Test.Integration.executeEvents(Test.Integration.testEventsUntil("createModel"),"Events/basic")}}),test("model is created and attached to pane object",function(){ok(Test.state.model),ok(Test.state.pane.model),equal(Test.state.model,Test.state.pane.model)})}(),function(){module("Integration.Events.dispose");var n=Test.Integration.testEventsUntil("dispose");test("dispose is called once on model when pane element is removed from DOM using jQuery",function(){Test.Integration.executeEvents(n,"Events/dispose"),ok(!Test.state.disposeCalled),$(".dispose").parent().remove(),equal(Test.state.disposeCallCount,1)}),test("dispose is called once on model when pane element is removed from DOM using native functions",function(){Test.Integration.executeEvents(n,"Events/dispose"),ok(!Test.state.disposeCalled);var t=document.querySelector(".dispose").parentNode;t.parentNode.removeChild(t),equal(Test.state.disposeCallCount,1)}),test("dispose calls end on pubsub lifetime for each pane",function(){Test.Integration.pubsubAsMock(),Test.Integration.executeEvents(n,"Events/basicParent"),$(".basicContainer").parent().remove(),ok(Test.Integration.context.pubsub.end.calledTwice)})}(),function(){module("Integration.Events.initialiseModel"),test("initialise function is called on model",function(){Test.Integration.executeEvents(Test.Integration.testEventsUntil("initialiseModel"),"Events/basic"),equal(Test.state.model.message,"test message")}),test("returning deferred from initialise makes pipeline wait",function(){Test.Integration.executeEvents(Test.Integration.testEventsUntil("initialiseModel"),"Events/initialise"),ok(TC.Events.spy.notCalled),Test.state.deferred.resolve(),ok(TC.Events.spy.calledOnce)}),test("rejecting deferred returned from initialise halts pipeline",function(){Test.Integration.executeEvents(Test.Integration.testEventsUntil("initialiseModel"),"Events/initialise"),Test.state.deferred.reject(),ok(TC.Events.spy.notCalled)})}(),function(){module("Integration.Events.loadResources",{setup:function(){Test.Integration.executeEvents(["loadResources"],"Events/basic")}}),test("loadResources loads model",function(){ok(Test.Integration.context.models["/Events/basic"])}),test("loadResources loads template",function(){equal($("#template--Events-basic").length,1)}),test("loadResources loads style",function(){equal($("#style--Events-basic").length,1)})}(),function(){module("Integration.Events.renderComplete");var n=Test.Integration.testEventsUntil("renderComplete");test("renderComplete is called on model when single pane has rendered",function(){Test.Integration.executeEvents(n,"Events/basic"),ok(Test.state.model.renderCompleteCalled)}),test("renderComplete is called on model when all panes in tree have rendered",function(){Test.Integration.executeEvents(n,"Events/initialiseParent"),ok(!Test.state.parentRenderCompleteCalled),Test.state.deferred.resolve(),ok(Test.state.parentRenderCompleteCalled)}),asyncTest("renderComplete is called on single model when in async mode",function(){expect(1),TC.options.synchronous=!1,Test.state.renderComplete=function(){equal($(".message").text(),"test message"),start()},Test.Integration.executeEvents(n,"Events/async")}),asyncTest("renderComplete is called on all models when in async mode",function(){expect(1),TC.options.synchronous=!1,Test.state.renderComplete=function(){equal($(".message").text(),"test message"),start()},Test.Integration.executeEvents(n,"Events/asyncParent")})}(),function(){module("Integration.Events.renderPane");var n=Test.Integration.testEventsUntil("renderPane");test("pane template is rendered and bound to model",function(){Test.Integration.executeEvents(n,"Events/basic"),equal($(".message").text(),"test message")}),test("paneRendered is called on model",function(){Test.Integration.executeEvents(n,"Events/basic"),ok(Test.state.model.paneRenderedCalled)}),test("child panes are rendered",function(){Test.Integration.executeEvents(n,"Events/basicParent"),equal($(".basic").length,1)}),test("model is passed data",function(){Test.Integration.executeEvents(n,"Events/data","test message"),equal($(".message").text(),"test message")}),asyncTest("paneRendered is called on model when in async mode",function(){expect(1),TC.options.synchronous=!1,Test.state.paneRendered=function(){equal($(".message").text(),"test message"),start()},Test.Integration.executeEvents(n,"Events/async")})}();
        
    module = moduleFunction;
})();